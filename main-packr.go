package main

import "github.com/gobuffalo/packr"

// !!! GENERATED FILE !!!
// Do NOT hand edit this file!!
// It is recommended that you DO NOT check into this file into SCM.
// We STRONGLY recommend you delete this file after you have built your
// Go binary. You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./tmpl", "model.html", "\"e3tkZWZpbmUgIm1vZGVsIn19CnBhY2thZ2Uge3sgLlBhY2thZ2VOYW1lIH19CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKfCBDb2RlIGdlbmVyYXRlZCBieSBtb2RlbGdlbiB8CnwgICAgICAgIERPIE5PVCBFRElULiAgICAgICAgfAorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCi8vIElmIHlvdSB3YW50IHRvIGV4dGVuZCBiZWhhdmlvdXI6Ci8vIFBsZWFzZSBjcmVhdGUgYSBjdXN0b20gZmlsZSBpbiB0aGlzIGRpcmVjdG9yeQovLyBhbmQgY3JlYXRlIHRoZSBtZXRob2RzIHRoZXJlIHRvIGF2b2lkIG92ZXJ3cml0aW5nIHlvdXIgY29kZSB3aXRoIHRoZSBnZW5lcmF0ZWQgb25lLgoKaW1wb3J0ICgKImZtdCIKImRhdGFiYXNlL3NxbCIKICAgIHt7IHJhbmdlICRrLCAkdjo9IC5Nb2RlbC5JbXBvcnRzIH19CiAgICAie3ska319IgogICAge3stIGVuZCB9fQopCgovLyB7ey5Nb2RlbC5OYW1lfX0gcmVwcmVzZW50cyBhIHJvdyBpbiB0aGUge3suTW9kZWwuVGFibGVOYW1lfX0gdGFibGUKdHlwZSB7ey5Nb2RlbC5OYW1lfX0gc3RydWN0IHsKICAgIHt7IHJhbmdlICRrLCAkdjo9IC5Nb2RlbC5GaWVsZHMgfX0KICAgICAgICB7eyAkdi5OYW1lIH19IHt7ICR2LlR5cGUgfX0gYGpzb246Int7JHYuQ29sdW1uTmFtZX19ImAKICAgIHt7LSBlbmQgfX0Kb2Zmc2V0IGludApsaW1pdCBpbnQKfQoKLy8gSW5zZXJ0IGEgbmV3IHt7Lk1vZGVsLk5hbWV9fSByb3cgaW4gdGhlIHt7Lk1vZGVsLlRhYmxlTmFtZX19IHRhYmxlCmZ1bmMgKHt7LlJlY2VpdmVyfX0gKnt7Lk1vZGVsLk5hbWV9fSkgSW5zZXJ0KGRiICpzcWwuREIpIChsYXN0SW5zZXJ0SUQgaW50NjQsIGVyciBlcnJvcikgewogICAgY29uc3Qgc3RtdCA9ICJJTlNFUlQgSU5UTyB7ey5Nb2RlbC5UYWJsZU5hbWV9fSAoe3suTW9kZWwuRmllbGRzIHwgaW5zZXJ0X2ZpZWxkc319KSBWQUxVRVMgKHt7Lk1vZGVsLkZpZWxkcyB8IGluc2VydF92YWx1ZXN9fSkiCiAgICByZXMsIGVyciA6PSBkYi5FeGVjKHN0bXQsIHt7IC4gfCBpbnNlcnRfYXJncyB9fSkKICAgIGlmIGVyciAhPSBuaWwgewogICAgICAgIHJldHVybiAwLCBlcnIKICAgIH0KICAgIHJldHVybiByZXMuTGFzdEluc2VydElkKCkKfQoKLy8gVXBkYXRlIGFuIGV4aXN0aW5nIHt7Lk1vZGVsLk5hbWV9fSByb3cgaW4gdGhlIHt7Lk1vZGVsLlRhYmxlTmFtZX19IHRhYmxlCmZ1bmMgKHt7LlJlY2VpdmVyfX0gKnt7Lk1vZGVsLk5hbWV9fSkgVXBkYXRlKGRiICpzcWwuREIsIGlkIGludDY0KSBlcnJvciB7CiAgICBjb25zdCBzdG10ID0gIlVQREFURSB7ey5Nb2RlbC5UYWJsZU5hbWV9fSBTRVQge3sgLiB8IHVwZGF0ZV92YWx1ZXMgfX0gV0hFUkUgaWQgPSA/IgogICAgXywgZXJyIDo9IGRiLkV4ZWMoc3RtdCwge3sgLiB8IHVwZGF0ZV9hcmdzIH19ICwgaWQpCiAgICByZXR1cm4gZXJyCn0KCi8vIFVwc2VydCBpbnNlcnRzIGEgbmV3IHt7Lk1vZGVsLk5hbWV9fSByb3cgaW4gdGhlIHt7Lk1vZGVsLlRhYmxlTmFtZX19IHRhYmxlCi8vIGlmIHRoZSB1bmlxdWUgY29uc3RyYWludHMgYXJlIG5vdCBmb3VuZCwgb3RoZXJ3aXNlIGl0IHVwZGF0ZXMgaXQuCmZ1bmMgKHt7LlJlY2VpdmVyfX0gKnt7Lk1vZGVsLk5hbWV9fSkgVXBzZXJ0KGRiICpzcWwuREIpIChsYXN0SW5zZXJ0SUQgaW50NjQsIGVyciBlcnJvcikgewogICAgY29uc3Qgc3RtdCA9ICJJTlNFUlQgSU5UTyB7ey5Nb2RlbC5UYWJsZU5hbWV9fSAoe3suTW9kZWwuRmllbGRzIHwgdXBzZXJ0X2ZpZWxkc319KSBWQUxVRVMgKHt7Lk1vZGVsLkZpZWxkcyB8IHVwc2VydF92YWx1ZXN9fSkgT04gRFVQTElDQVRFIEtFWSBVUERBVEUge3sgLiB8IHVwc2VydF9vbl9kdXBsaWNhdGUgfX0iCiAgICByZXMsIGVyciA6PSBkYi5FeGVjKHN0bXQsIHt7IC4gfCB1cHNlcnRfYXJncyB9fSkKICAgIGlmIGVyciAhPSBuaWwgewogICAgICAgIHJldHVybiAwLCBlcnIKICAgIH0KICAgIHJldHVybiByZXMuTGFzdEluc2VydElkKCkKfQoKLy8gRmluZCBhbiBleGlzdGluZyB7ey5Nb2RlbC5OYW1lfX0gcm93IGluIHRoZSB7ey5Nb2RlbC5UYWJsZU5hbWV9fSB0YWJsZQpmdW5jICh7ey5SZWNlaXZlcn19ICp7ey5Nb2RlbC5OYW1lfX0pIEZpbmQoZGIgKnNxbC5EQiwgaWQgaW50NjQpIGVycm9yIHsKICAgIGNvbnN0IHN0bXQgPSAiU0VMRUNUICogRlJPTSB7ey5Nb2RlbC5UYWJsZU5hbWV9fSBXSEVSRSBpZCA9ID8iCiAgICByb3cgOj0gZGIuUXVlcnlSb3coc3RtdCwgaWQpCiAgICByZXR1cm4gcm93LlNjYW4oe3sgLiB8IHNjYW5fZmllbGRzfX0pCn0KCi8vIExvYWQgYWxsLCBvciBhIHN1YnNldCBvZiB7ey5Nb2RlbC5OYW1lfX0gcm93cyBmcm9tIHRoZSB7ey5Nb2RlbC5UYWJsZU5hbWV9fSB0YWJsZQpmdW5jICh7ey5SZWNlaXZlcn19ICp7ey5Nb2RlbC5OYW1lfX0pIExvYWQoZGIgKnNxbC5EQikgKHNldCBbXXt7Lk1vZGVsLk5hbWV9fSwgZXJyIGVycm9yKSB7CiAgICBzdG10IDo9ICJTRUxFQ1QgKiBGUk9NIHt7Lk1vZGVsLlRhYmxlTmFtZX19IgoKICAgIGlmIHt7LlJlY2VpdmVyfX0ubGltaXQgPT0gMCAmJiB7ey5SZWNlaXZlcn19Lm9mZnNldCA+IDAgewogICAgICAgIHJldHVybiBzZXQsIGZtdC5FcnJvcmYoImNhbm5vdCBxdWVyeSB3aXRoIG9mZnNldCBidXQgbm8gbGltaXQiKQogICAgfQoKICAgIGlmIHt7LlJlY2VpdmVyfX0ubGltaXQgPiAwIHsKICAgICAgICBzdG10ICs9IGZtdC5TcHJpbnRmKCIgTElNSVQgJWQiLCB7ey5SZWNlaXZlcn19LmxpbWl0KQogICAgfQogICAgaWYge3suUmVjZWl2ZXJ9fS5vZmZzZXQgPiAwIHsKICAgICAgICBzdG10ICs9IGZtdC5TcHJpbnRmKCIgT0ZGU0VUICVkIiwge3suUmVjZWl2ZXJ9fS5vZmZzZXQpCiAgICB9CiAgICBkZWZlciBmdW5jKCkgewogICAgICAgIHt7LlJlY2VpdmVyfX0ubGltaXQgPSAwCiAgICAgICAge3suUmVjZWl2ZXJ9fS5vZmZzZXQgPSAwCiAgICB9KCkKICAgIHJvd3MsIGVyciA6PSBkYi5RdWVyeShzdG10KQogICAgaWYgZXJyICE9IG5pbCB7CiAgICAgICAgcmV0dXJuCiAgICB9CiAgICBkZWZlciByb3dzLkNsb3NlKCkKICAgICAgICBmb3Igcm93cy5OZXh0KCkgewogICAgICAgICAgICBpZiBlcnIgPSByb3dzLlNjYW4oe3suIHwgc2Nhbl9maWVsZHN9fSk7IGVyciAhPSBuaWwgewogICAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgc2V0ID0gYXBwZW5kKHNldCwgKnt7LlJlY2VpdmVyfX0pCiAgICB9CgogICAgcmV0dXJuCn0KCi8vIERlbGV0ZSBhbiBleGlzdGluZyB7ey5Nb2RlbC5OYW1lfX0gcm93IGZyb20gdGhlIHt7Lk1vZGVsLlRhYmxlTmFtZX19IHRhYmxlCmZ1bmMgKHt7LlJlY2VpdmVyfX0gKnt7Lk1vZGVsLk5hbWV9fSkgRGVsZXRlKGRiICpzcWwuREIsIGlkIGludDY0KSAocm93c0FmZmVjdGVkIGludDY0LCBlcnIgZXJyb3IpIHsKICAgIGNvbnN0IHN0bXQgPSAiREVMRVRFIEZST00ge3suTW9kZWwuVGFibGVOYW1lfX0gV0hFUkUgaWQgPSA/IgogICAgcmVzdWx0LCBlcnIgOj0gZGIuRXhlYyhzdG10LCBpZCkKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybgoJfQoKCXJldHVybiByZXN1bHQuUm93c0FmZmVjdGVkKCkKfQoKLy8gQ291bnQgdGhlIG51bWJlciBvZiByb3dzIGZyb20gdGhlIHt7Lk1vZGVsLlRhYmxlTmFtZX19IHRhYmxlCmZ1bmMoe3suUmVjZWl2ZXJ9fSAqe3suTW9kZWwuTmFtZX19KSBDb3VudChkYiAqc3FsLkRCKSAoY291bnQgaW50NjQsIGVyciBlcnJvcikgewogICAgY29uc3Qgc3RtdCA9ICJTRUxFQ1QgQ09VTlQoKikgRlJPTSB7ey5Nb2RlbC5UYWJsZU5hbWV9fSIKICAgIHJvdyA6PSBkYi5RdWVyeVJvdyhzdG10KQogICAgaWYgZXJyID0gcm93LlNjYW4oJmNvdW50KTsgZXJyICE9IG5pbCB7CiAgICAgICAgcmV0dXJuCiAgICB9CiAgICByZXR1cm4KfQoKLy8gRXhpc3RzIGNoZWNrcyBmb3IgdGhlIGl0ZW1zIGV4aXN0ZW5jZSBpbiB0aGUgZGF0YWJhc2UsIGJhc2VkIG9uIGl0J3MgaWQuCi8vIEFuIGVycm9yIHdpbGwgb25seSBiZSByZXR1cm5lZCBpZiBhIFNRTCByZWxhdGVkIGZhaWx1cmUgaGFwcGVucy4KLy8gSW4gYWxsIG90aGVyIGNhc2VzLCBhIGJvb2wgYW5kIG5pbCB3aWxsIHJldHVybi4KZnVuYyh7ey5SZWNlaXZlcn19ICp7ey5Nb2RlbC5OYW1lfX0pIEV4aXN0cyhkYiAqc3FsLkRCLCBpZCBpbnQ2NCkgKGV4aXN0cyBib29sLCBlcnIgZXJyb3IpIHsKICAgIGNvbnN0IHN0bXQgPSAiU0VMRUNUIEVYSVNUUyhTRUxFQ1QgMSBGUk9NIHt7Lk1vZGVsLlRhYmxlTmFtZX19IFdIRVJFIGlkID0gPyBMSU1JVCAxKSBBUyBgZXhpc3RzYCIKICAgIHZhciBjb3VudCBpbnQKICAgIHJvdyA6PSBkYi5RdWVyeVJvdyhzdG10LCBpZCkKICAgIGlmIGVyciA9IHJvdy5TY2FuKCZjb3VudCk7IGVyciAhPSBuaWwgewogICAgICAgIHJldHVybgogICAgfQogICAgcmV0dXJuIGNvdW50ID4gMCwgbmlsCn0KCi8vIFRhYmxlTmFtZSByZXR1cm5zIHRoZSB0YWJsZSBuYW1lCmZ1bmMgKHt7LlJlY2VpdmVyfX0gKnt7Lk1vZGVsLk5hbWV9fSkgVGFibGVOYW1lKCkgc3RyaW5nIHsKcmV0dXJuICJ7ey5Nb2RlbC5UYWJsZU5hbWV9fSIKfQoKLy8gU2V0TGltaXQgc2V0cyB0aGUgcXVlcnkgbGltaXQKZnVuYyAoe3suUmVjZWl2ZXJ9fSAqe3suTW9kZWwuTmFtZX19KSBTZXRMaW1pdChsaW1pdCBpbnQpICp7ey5Nb2RlbC5OYW1lfX0gewp7ey5SZWNlaXZlcn19LmxpbWl0ID0gbGltaXQKcmV0dXJuIHt7LlJlY2VpdmVyfX0KfQoKLy8gU2V0T2Zmc2V0IHNldHMgdGhlIHF1ZXJ5IG9mZnNldApmdW5jICh7ey5SZWNlaXZlcn19ICp7ey5Nb2RlbC5OYW1lfX0pIFNldE9mZnNldChvZmZzZXQgaW50KSAqe3suTW9kZWwuTmFtZX19IHsKe3suUmVjZWl2ZXJ9fS5vZmZzZXQgPSBvZmZzZXQKcmV0dXJuIHt7LlJlY2VpdmVyfX0KfQp7e2VuZH19Cgo=\"")
	packr.PackJSONBytes("./tmpl", "tmpl.go", "\"cGFja2FnZSB0bXBsCgppbXBvcnQgKAoJImZtdCIKCSJodG1sL3RlbXBsYXRlIgoJInN0cmluZ3MiCikKCnZhciBGdW5jTWFwID0gdGVtcGxhdGUuRnVuY01hcHsKCSJpbnNlcnRfZmllbGRzIjogR2V0SW5zZXJ0RmllbGRzLAoJImluc2VydF92YWx1ZXMiOiBHZXRJbnNlcnRWYWx1ZXMsCgkiaW5zZXJ0X2FyZ3MiOiAgIEdldEluc2VydEFyZ3MsCgkic2Nhbl9maWVsZHMiOiAgIEdldFNjYW5GaWVsZHMsCgkidXBkYXRlX2FyZ3MiOiAgIEdldFVwZGF0ZUFyZ3MsCgkidXBkYXRlX3ZhbHVlcyI6IEdldFVwZGF0ZVZhbHVlcywKCSJ1cHNlcnRfZmllbGRzIjogR2V0VXBzZXJ0RmllbGRzLAoJInVwc2VydF92YWx1ZXMiOiBHZXRVcHNlcnRWYWx1ZXMsCgkidXBzZXJ0X29uX2R1cGxpY2F0ZSI6IEdldFVwc2VydE9uRHVwbGljYXRlLAoJInVwc2VydF9hcmdzIjogR2V0VXBzZXJ0QXJncywKfQoKZnVuYyBHZXRJbnNlcnRGaWVsZHMoZmllbGRzIFtdVG1wbEZpZWxkKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgZmllbGRzIHsKCQlpZiBmbC5Db2x1bW5OYW1lID09ICJpZCIgewoJCQljb250aW51ZQoJCX0KCQlwYXJ0cyA9IGFwcGVuZChwYXJ0cywgImAiK2ZsLkNvbHVtbk5hbWUrImAiKQoJfQoJcmV0dXJuIHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikKfQoKZnVuYyBHZXRJbnNlcnRWYWx1ZXMoZmllbGRzIFtdVG1wbEZpZWxkKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgZmllbGRzIHsKCQlzd2l0Y2ggZmwuQ29sdW1uTmFtZSB7CgkJY2FzZSAiaWQiOgoJCQljb250aW51ZQoJCWNhc2UgImNyZWF0ZWRfYXQiOgoJCQlwYXJ0cyA9IGFwcGVuZChwYXJ0cywgIk5PVygpIikKCQkJY29udGludWUKCQlkZWZhdWx0OgoJCQlwYXJ0cyA9IGFwcGVuZChwYXJ0cywgIj8iKQoJCX0KCX0KCXJldHVybiBzdHJpbmdzLkpvaW4ocGFydHMsICIsICIpCn0KCmZ1bmMgR2V0SW5zZXJ0QXJncyhtIFN0cnVjdFRtcGxEYXRhKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgbS5Nb2RlbC5GaWVsZHMgewoJCXN3aXRjaCBmbC5OYW1lIHsKCQljYXNlICJJRCIsICJDcmVhdGVkQXQiOgoJCQljb250aW51ZQoJCX0KCQlwYXJ0cyA9IGFwcGVuZChwYXJ0cywgZm10LlNwcmludGYoIiVzLiVzIiwgbS5SZWNlaXZlciwgZmwuTmFtZSkpCgl9CglyZXR1cm4gc3RyaW5ncy5Kb2luKHBhcnRzLCAiLCAiKQp9CgpmdW5jIEdldFNjYW5GaWVsZHMobSBTdHJ1Y3RUbXBsRGF0YSkgdGVtcGxhdGUuSFRNTCB7Cgl2YXIgcGFydHMgW11zdHJpbmcKCWZvciBfLCBmbCA6PSByYW5nZSBtLk1vZGVsLkZpZWxkcyB7CgkJcGFydHMgPSBhcHBlbmQocGFydHMsIGZtdC5TcHJpbnRmKCImJXMuJXMiLCBtLlJlY2VpdmVyLCBmbC5OYW1lKSkKCX0KCXJldHVybiB0ZW1wbGF0ZS5IVE1MKHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikpCn0KCmZ1bmMgR2V0VXBkYXRlQXJncyhtIFN0cnVjdFRtcGxEYXRhKSB0ZW1wbGF0ZS5IVE1MIHsKCXZhciBwYXJ0cyBbXXN0cmluZwoJZm9yIF8sIGZsIDo9IHJhbmdlIG0uTW9kZWwuRmllbGRzIHsKCQlzd2l0Y2ggZmwuTmFtZSB7CgkJY2FzZSAiSUQiLCAiQ3JlYXRlZEF0IiwgIlVwZGF0ZWRBdCI6CgkJCWNvbnRpbnVlCgkJfQoJCXBhcnRzID0gYXBwZW5kKHBhcnRzLCBmbXQuU3ByaW50ZigiJXMuJXMiLCBtLlJlY2VpdmVyLCBmbC5OYW1lKSkKCX0KCXJldHVybiB0ZW1wbGF0ZS5IVE1MKHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikpCn0KCmZ1bmMgR2V0VXBkYXRlVmFsdWVzKG0gU3RydWN0VG1wbERhdGEpIHN0cmluZyB7Cgl2YXIgcGFydHMgW11zdHJpbmcKCWZvciBfLCBmbCA6PSByYW5nZSBtLk1vZGVsLkZpZWxkcyB7CgkJc3dpdGNoIGZsLk5hbWUgewoJCWNhc2UgIklEIiwgIkNyZWF0ZWRBdCI6CgkJCWNvbnRpbnVlCgkJY2FzZSAiVXBkYXRlZEF0IjoKCQkJcGFydHMgPSBhcHBlbmQocGFydHMsIGZtdC5TcHJpbnRmKCJgJXNgPVVUQ19USU1FU1RBTVAoKSIsIGZsLkNvbHVtbk5hbWUpKQoJCWRlZmF1bHQ6CgkJCXBhcnRzID0gYXBwZW5kKHBhcnRzLCBmbXQuU3ByaW50ZigiYCVzYD0/IiwgZmwuQ29sdW1uTmFtZSkpCgkJfQoJfQoJcmV0dXJuIHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikKfQoKZnVuYyBHZXRVcHNlcnRGaWVsZHMoZmllbGRzIFtdVG1wbEZpZWxkKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgZmllbGRzIHsKCQlwYXJ0cyA9IGFwcGVuZChwYXJ0cywgImAiK2ZsLkNvbHVtbk5hbWUrImAiKQoJfQoJcmV0dXJuIHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikKfQoKZnVuYyBHZXRVcHNlcnRWYWx1ZXMoZmllbGRzIFtdVG1wbEZpZWxkKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgZmllbGRzIHsKCQlzd2l0Y2ggZmwuQ29sdW1uTmFtZSB7CgkJY2FzZSAiY3JlYXRlZF9hdCI6CgkJCXBhcnRzID0gYXBwZW5kKHBhcnRzLCAiTk9XKCkiKQoJCQljb250aW51ZQoJCWRlZmF1bHQ6CgkJCXBhcnRzID0gYXBwZW5kKHBhcnRzLCAiPyIpCgkJfQoJfQoJcmV0dXJuIHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikKfQoKZnVuYyBHZXRVcHNlcnRPbkR1cGxpY2F0ZShtIFN0cnVjdFRtcGxEYXRhKSBzdHJpbmcgewoJdmFyIHBhcnRzIFtdc3RyaW5nCglmb3IgXywgZmwgOj0gcmFuZ2UgbS5Nb2RlbC5GaWVsZHMgewoJCXN3aXRjaCBmbC5OYW1lIHsKCQljYXNlICJDcmVhdGVkQXQiOgoJCQljb250aW51ZQoJCWNhc2UgIklEIjoKCQkJcGFydHMgPSBhcHBlbmQocGFydHMsIGZtdC5TcHJpbnRmKCJgJXNgPUxBU1RfSU5TRVJUX0lEKGAlc2ApIiwgZmwuQ29sdW1uTmFtZSwgZmwuQ29sdW1uTmFtZSkpCgkJY2FzZSAiVXBkYXRlZEF0IjoKCQkJcGFydHMgPSBhcHBlbmQocGFydHMsIGZtdC5TcHJpbnRmKCJgJXNgPVVUQ19USU1FU1RBTVAoKSIsIGZsLkNvbHVtbk5hbWUpKQoJCWRlZmF1bHQ6CgkJCXBhcnRzID0gYXBwZW5kKHBhcnRzLCBmbXQuU3ByaW50ZigiYCVzYD1WQUxVRVMoYCVzYCkiLCBmbC5Db2x1bW5OYW1lLCBmbC5Db2x1bW5OYW1lKSkKCQl9Cgl9CglyZXR1cm4gc3RyaW5ncy5Kb2luKHBhcnRzLCAiLCAiKQp9CgpmdW5jIEdldFVwc2VydEFyZ3MobSBTdHJ1Y3RUbXBsRGF0YSkgc3RyaW5nIHsKCXZhciBwYXJ0cyBbXXN0cmluZwoJZm9yIF8sIGZsIDo9IHJhbmdlIG0uTW9kZWwuRmllbGRzIHsKCQlzd2l0Y2ggZmwuTmFtZSB7CgkJY2FzZSAiQ3JlYXRlZEF0IjoKCQkJY29udGludWUKCQl9CgkJcGFydHMgPSBhcHBlbmQocGFydHMsIGZtdC5TcHJpbnRmKCIlcy4lcyIsIG0uUmVjZWl2ZXIsIGZsLk5hbWUpKQoJfQoJcmV0dXJuIHN0cmluZ3MuSm9pbihwYXJ0cywgIiwgIikKfQ==\"")
	packr.PackJSONBytes("./tmpl", "types.go", "\"cGFja2FnZSB0bXBsCgovLyBUbXBsU3RydWN0cyBpcyBhIGNvbGxlY3Rpb24gb24gVG1wbFN0cnVjdAp0eXBlIFRtcGxTdHJ1Y3RzIFtdVG1wbFN0cnVjdAoKLy8gVG1wbFN0cnVjdCBkZWZpbmVzIHRoZSB0YWJsZSBkYXRhIHRvIHBhc3MgdG8gdGhlIG1vZGVscwp0eXBlIFRtcGxTdHJ1Y3Qgc3RydWN0IHsKCU5hbWUgICAgICBzdHJpbmcKCVRhYmxlTmFtZSBzdHJpbmcKCUZpZWxkcyAgICBbXVRtcGxGaWVsZAoJSW1wb3J0cyAgIG1hcFtzdHJpbmddc3RydWN0e30KfQoKLy8gVG1wbEZpZWxkIGRlZmluZXMgYSB0YWJsZSBmaWVsZCB0ZW1wbGF0ZQp0eXBlIFRtcGxGaWVsZCBzdHJ1Y3QgewoJTmFtZSAgICAgICBzdHJpbmcKCVR5cGUgICAgICAgc3RyaW5nCglDb2x1bW5OYW1lIHN0cmluZwoJTnVsbGFibGUgICBib29sCn0KCi8vIFN0cnVjdFRtcGxEYXRhIGRlZmluZXMgdGhlIHRvcCBsZXZlbCBzdHJ1Y3QgZGF0YSB0byBwYXNzIHRvIHRoZSBtb2RlbHMKdHlwZSBTdHJ1Y3RUbXBsRGF0YSBzdHJ1Y3QgewoJTW9kZWwgICAgICAgVG1wbFN0cnVjdAoJUmVjZWl2ZXIgICAgc3RyaW5nCglQYWNrYWdlTmFtZSBzdHJpbmcKfQo=\"")
	packr.PackJSONBytes("./tmpl", "x_helpers.html", "\"\"")
	packr.PackJSONBytes("./tmpl", "x_helpers_test.html", "\"e3tkZWZpbmUgImhlbHBlcnN0ZXN0In19CnBhY2thZ2Uge3sgLlBhY2thZ2VOYW1lIH19Ci8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwp8IENvZGUgZ2VuZXJhdGVkIGJ5IG1vZGVsZ2VuIHwKfCAgICAgICAgRE8gTk9UIEVESVQuICAgICAgICB8CistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKaW1wb3J0ICgKImRhdGFiYXNlL3NxbC9kcml2ZXIiCiJlbmNvZGluZy9qc29uIgoicmVmbGVjdCIKInRlc3RpbmciCiJ0aW1lIgopCgpmdW5jIFRlc3RTdHJ1Y3RFbWJlZGRpbmcodCAqdGVzdGluZy5UKSB7CnRpbSA6PSB0aW1lLkRhdGUoMjAxNywgMSwgMSwgMCwgMCwgMCwgMCwgdGltZS5VVEMpCmV4cGVjdGVkIDo9IFtdYnl0ZShgeyJhIjoxMjMsImIiOnRydWUsImMiOjEyMy4xMjMsImQiOiJzdHJpbmciLCJlIjoiMjAxNy0wMS0wMVQwMDowMDowMFoiLCJmIjpbMSwyLDNdfWApCnR5cGUgZW1iZWQgc3RydWN0IHsKQSBOdWxsSW50NjQgICBganNvbjoiYSxvbWl0ZW1wdHkiYApCIE51bGxCb29sICAgIGBqc29uOiJiLG9taXRlbXB0eSJgCkMgTnVsbEZsb2F0NjQgYGpzb246ImMsb21pdGVtcHR5ImAKRCBOdWxsU3RyaW5nICBganNvbjoiZCxvbWl0ZW1wdHkiYApFIE51bGxUaW1lICAgIGBqc29uOiJlLG9taXRlbXB0eSJgCkYgUmF3SlNPTiAgICAgYGpzb246ImYsb21pdGVtcHR5ImAKfQplbSA6PSBlbWJlZHsKQTogTnVsbEludDY0e1ZhbGlkOiB0cnVlLCBJbnQ2NDogMTIzfSwKQjogTnVsbEJvb2x7VmFsaWQ6IHRydWUsIEJvb2w6IHRydWV9LApDOiBOdWxsRmxvYXQ2NHtWYWxpZDogdHJ1ZSwgRmxvYXQ2NDogMTIzLjEyM30sCkQ6IE51bGxTdHJpbmd7VmFsaWQ6IHRydWUsIFN0cmluZzogInN0cmluZyJ9LApFOiBOdWxsVGltZXtWYWxpZDogdHJ1ZSwgVGltZTogdGltfSwKRjogUmF3SlNPTihgWzEsMiwzXWApLAp9CmIsIGVyciA6PSBqc29uLk1hcnNoYWwoZW0pCmlmIGVyciAhPSBuaWwgewp0LkZhdGFsKGVycikKfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZXhwZWN0ZWQsIGIpIHsKdC5GYXRhbCgibm90IHRoZSBzYW1lIEpTT04hIikKfQppZiAhKHN0cmluZyhiKSA9PSBzdHJpbmcoZXhwZWN0ZWQpKSB7CnQuRmF0YWwoIm5vdCB0aGUgc2FtZSEiKQp9Cgp2YXIgZW0yIGVtYmVkCmlmIGVyciA6PSBqc29uLlVubWFyc2hhbChleHBlY3RlZCwgJmVtMik7IGVyciAhPSBuaWwgewp0LkZhdGFsKGVycikKfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZW0yLCBlbSkgewp0LkZhdGFsKCJub3QgY29ycmVjdCIpCn0KfQoKZnVuYyBUZXN0TnVsbFN0cmluZ19Vbm1hcnNoYWxKU09OKHQgKnRlc3RpbmcuVCkgewp0ZXN0cyA6PSBbXXN0cnVjdCB7Cm5hbWUgICAgc3RyaW5nCm4gICAgICAgTnVsbFN0cmluZwpzb3VyY2UgIFtdYnl0ZQp3YW50RXJyIGJvb2wKfXsKewpuYW1lOiAgICAidmFsaWQiLApzb3VyY2U6ICBbXWJ5dGUoYCJoZWxsbyJgKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogICAgImludmFsaWQiLApzb3VyY2U6ICBbXWJ5dGUoYHsia2V5IjoidmFsdWUifWApLAp3YW50RXJyOiB0cnVlLAp9LAp7Cm5hbWU6ICAgICJlbXB0eSIsCnNvdXJjZTogIFtdYnl0ZXt9LAp3YW50RXJyOiB0cnVlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlVubWFyc2hhbEpTT04odHQuc291cmNlKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbFN0cmluZy5Vbm1hcnNoYWxKU09OKCkgZXJyb3IgPSAldiwgd2FudEVyciAldiIsIGVyciwgdHQud2FudEVycikKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxTdHJpbmdfVmFsdWUodCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICBOdWxsU3RyaW5nCndhbnQgICAgZHJpdmVyLlZhbHVlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46IE51bGxTdHJpbmd7ClZhbGlkOiAgdHJ1ZSwKU3RyaW5nOiAiaGVsbG8iLAp9LAp3YW50OiAgICBkcml2ZXIuVmFsdWUoImhlbGxvIiksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJpbnZhbGlkIiwKbjogTnVsbFN0cmluZ3sKVmFsaWQ6IGZhbHNlLAp9LAp3YW50OiAgICBuaWwsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmdvdCwgZXJyIDo9IHR0Lm4uVmFsdWUoKQppZiAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsU3RyaW5nLlZhbHVlKCkgZXJyb3IgPSAldiwgd2FudEVyciAldiIsIGVyciwgdHQud2FudEVycikKcmV0dXJuCn0KaWYgIXJlZmxlY3QuRGVlcEVxdWFsKGdvdCwgdHQud2FudCkgewp0LkVycm9yZigiTnVsbFN0cmluZy5WYWx1ZSgpID0gJXYsIHdhbnQgJXYiLCBnb3QsIHR0LndhbnQpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsU3RyaW5nX1NjYW4odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbFN0cmluZwp3YW50RXJyIGJvb2wKc3JjICAgICBpbnRlcmZhY2V7fQp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46ICZOdWxsU3RyaW5newpTdHJpbmc6ICJoZWxsbyIsClZhbGlkOiAgdHJ1ZSwKfSwKc3JjOiAgICAgIiIsCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJuaWwgdmFsdWUiLApuOiAmTnVsbFN0cmluZ3sKU3RyaW5nOiAiaGVsbG8iLApWYWxpZDogIGZhbHNlLAp9LApzcmM6ICAgICBuaWwsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlNjYW4odHQuc3JjKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbFN0cmluZy5TY2FuKCkgZXJyb3IgPSAldiwgd2FudEVyciAldiIsIGVyciwgdHQud2FudEVycikKfQppZiB0dC5uLlZhbGlkID09IGZhbHNlICYmIHR0LnNyYyAhPSBuaWwgewp0LkVycm9yZigic2hvdWxkIHJldHVybiBudWxsIikKfQppZiB0dC5uLlZhbGlkICYmIHR0LnNyYyAhPSB0dC5uLlN0cmluZyB7CnQuRXJyb3JmKCJpbnZhbGlkIHZhbHVlIikKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxTdHJpbmdfTWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbFN0cmluZwp3YW50ICAgIFtdYnl0ZQp3YW50RXJyIGJvb2wKfXsKewpuYW1lOiAidmFsaWQiLApuOiAmTnVsbFN0cmluZ3sKU3RyaW5nOiAiaGVsbG8iLApWYWxpZDogIHRydWUsCn0sCndhbnQ6ICAgIFtdYnl0ZShgImhlbGxvImApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAidmFsaWQgbnVsbCIsCm46ICZOdWxsU3RyaW5newpTdHJpbmc6ICIiLApWYWxpZDogIGZhbHNlLAp9LAp3YW50OiAgICBbXWJ5dGUoYG51bGxgKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogImludmFsaWQiLApuOiAmTnVsbFN0cmluZ3sKVmFsaWQ6IHRydWUsCn0sCndhbnQ6ICAgIFtdYnl0ZShgIiJgKSwKd2FudEVycjogZmFsc2UsCn0sCn0KZm9yIF8sIHR0IDo9IHJhbmdlIHRlc3RzIHsKdC5SdW4odHQubmFtZSwgZnVuYyh0ICp0ZXN0aW5nLlQpIHsKZ290LCBlcnIgOj0gdHQubi5NYXJzaGFsSlNPTigpCmlmIChlcnIgIT0gbmlsKSAhPSB0dC53YW50RXJyIHsKdC5FcnJvcmYoIk51bGxTdHJpbmcuTWFyc2hhbEpTT04oKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQpyZXR1cm4KfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZ290LCB0dC53YW50KSB7CnQuRXJyb3JmKCJOdWxsU3RyaW5nLk1hcnNoYWxKU09OKCkgPSAldiwgd2FudCAldiIsIGdvdCwgdHQud2FudCkKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxCb29sX1VubWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICAgICAgIHN0cmluZwpuICAgICAgICAgICAgTnVsbEJvb2wKc291cmNlICAgICAgIFtdYnl0ZQp3YW50RXJyICAgICAgYm9vbAp3YW50VmFsaWRpdHkgYm9vbAp9ewp7Cm5hbWU6ICAgICAgICAgInZhbGlkIiwKc291cmNlOiAgICAgICBbXWJ5dGUoYGZhbHNlYCksCndhbnRFcnI6ICAgICAgZmFsc2UsCndhbnRWYWxpZGl0eTogdHJ1ZSwKfSwKewpuYW1lOiAgICAgICAgICJpbnZhbGlkIiwKc291cmNlOiAgICAgICBbXWJ5dGUoYHsia2V5IjoidmFsdWUifWApLAp3YW50RXJyOiAgICAgIHRydWUsCndhbnRWYWxpZGl0eTogZmFsc2UsCn0sCnsKbmFtZTogICAgICAgICAiZW1wdHkiLApzb3VyY2U6ICAgICAgIFtdYnl0ZXt9LAp3YW50RXJyOiAgICAgIHRydWUsCndhbnRWYWxpZGl0eTogZmFsc2UsCn0sCnsKbmFtZTogICAgICAgICAiZXhwbGljaXQgbnVsbCIsCnNvdXJjZTogICAgICAgW11ieXRlKCJudWxsIiksCndhbnRFcnI6ICAgICAgZmFsc2UsCndhbnRWYWxpZGl0eTogZmFsc2UsCn0sCn0KZm9yIF8sIHR0IDo9IHJhbmdlIHRlc3RzIHsKdC5SdW4odHQubmFtZSwgZnVuYyh0ICp0ZXN0aW5nLlQpIHsKaWYgZXJyIDo9IHR0Lm4uVW5tYXJzaGFsSlNPTih0dC5zb3VyY2UpOyAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciAmJiB0dC5uLlZhbGlkID09IHR0LndhbnRWYWxpZGl0eSB7CiAgICB0LkVycm9yZigiTnVsbEJvb2wuVW5tYXJzaGFsSlNPTigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsQm9vbF9WYWx1ZSh0ICp0ZXN0aW5nLlQpIHsKdGVzdHMgOj0gW11zdHJ1Y3QgewpuYW1lICAgIHN0cmluZwpuICAgICAgIE51bGxCb29sCndhbnQgICAgZHJpdmVyLlZhbHVlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46IE51bGxCb29sewpWYWxpZDogdHJ1ZSwKQm9vbDogIHRydWUsCn0sCndhbnQ6ICAgIGRyaXZlci5WYWx1ZSh0cnVlKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogImludmFsaWQiLApuOiBOdWxsQm9vbHsKVmFsaWQ6IGZhbHNlLAp9LAp3YW50OiAgICBuaWwsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmdvdCwgZXJyIDo9IHR0Lm4uVmFsdWUoKQppZiAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsQm9vbC5WYWx1ZSgpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCnJldHVybgp9CmlmICFyZWZsZWN0LkRlZXBFcXVhbChnb3QsIHR0LndhbnQpIHsKdC5FcnJvcmYoIk51bGxCb29sLlZhbHVlKCkgPSAldiwgd2FudCAldiIsIGdvdCwgdHQud2FudCkKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxCb29sX1NjYW4odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbEJvb2wKd2FudEVyciBib29sCnNyYyAgICAgaW50ZXJmYWNle30KfXsKewpuYW1lOiAidmFsaWQiLApuOiAmTnVsbEJvb2x7CkJvb2w6ICB0cnVlLApWYWxpZDogdHJ1ZSwKfSwKc3JjOiAgICAgdHJ1ZSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogIm5pbCB2YWx1ZSIsCm46ICZOdWxsQm9vbHsKQm9vbDogIHRydWUsClZhbGlkOiBmYWxzZSwKfSwKc3JjOiAgICAgZmFsc2UsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlNjYW4odHQuc3JjKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbEJvb2wuU2NhbigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCn0KaWYgdHQubi5WYWxpZCA9PSBmYWxzZSAmJiB0dC5zcmMgIT0gbmlsIHsKdC5FcnJvcmYoInNob3VsZCByZXR1cm4gbnVsbCIpCn0KaWYgdHQubi5WYWxpZCAmJiB0dC5zcmMgIT0gdHQubi5Cb29sIHsKdC5FcnJvcmYoImludmFsaWQgdmFsdWUiKQp9Cn0pCn0KfQoKZnVuYyBUZXN0TnVsbEJvb2xfTWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbEJvb2wKd2FudCAgICBbXWJ5dGUKd2FudEVyciBib29sCn17CnsKbmFtZTogInZhbGlkIiwKbjogJk51bGxCb29sewpWYWxpZDogdHJ1ZSwKfSwKd2FudDogICAgW11ieXRlKGBmYWxzZWApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAidmFsaWQgbnVsbCIsCm46ICZOdWxsQm9vbHsKVmFsaWQ6IGZhbHNlLAp9LAp3YW50OiAgICBbXWJ5dGUoYG51bGxgKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogImludmFsaWQiLApuOiAmTnVsbEJvb2x7ClZhbGlkOiB0cnVlLAp9LAp3YW50OiAgICBbXWJ5dGUoYGZhbHNlYCksCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmdvdCwgZXJyIDo9IHR0Lm4uTWFyc2hhbEpTT04oKQppZiAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsQm9vbC5NYXJzaGFsSlNPTigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCnJldHVybgp9CmlmICFyZWZsZWN0LkRlZXBFcXVhbChnb3QsIHR0LndhbnQpIHsKdC5FcnJvcmYoIk51bGxCb29sLk1hcnNoYWxKU09OKCkgPSAldiwgd2FudCAldiIsIGdvdCwgdHQud2FudCkKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxUaW1lX1VubWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICBOdWxsVGltZQpzb3VyY2UgIFtdYnl0ZQp3YW50RXJyIGJvb2wKfXsKewpuYW1lOiAgICAidmFsaWQiLApzb3VyY2U6ICBbXWJ5dGUoYCIyMDE3LTExLTI0VDAwOjAwOjAwWiJgKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogICAgImludmFsaWQiLApzb3VyY2U6ICBbXWJ5dGUoYHsia2V5IjoidmFsdWUifWApLAp3YW50RXJyOiB0cnVlLAp9LAp7Cm5hbWU6ICAgICJlbXB0eSIsCnNvdXJjZTogIFtdYnl0ZXt9LAp3YW50RXJyOiB0cnVlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlVubWFyc2hhbEpTT04odHQuc291cmNlKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbEJvb2wuVW5tYXJzaGFsSlNPTigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsVGltZV9WYWx1ZSh0ICp0ZXN0aW5nLlQpIHsKdGltIDo9IHRpbWUuTm93KCkKdGVzdHMgOj0gW11zdHJ1Y3QgewpuYW1lICAgIHN0cmluZwpuICAgICAgIE51bGxUaW1lCndhbnQgICAgZHJpdmVyLlZhbHVlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46IE51bGxUaW1lewpWYWxpZDogdHJ1ZSwKVGltZTogIHRpbSwKfSwKd2FudDogICAgZHJpdmVyLlZhbHVlKHRpbSksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJpbnZhbGlkIiwKbjogTnVsbFRpbWV7ClZhbGlkOiBmYWxzZSwKfSwKd2FudDogICAgbmlsLAp3YW50RXJyOiBmYWxzZSwKfSwKfQpmb3IgXywgdHQgOj0gcmFuZ2UgdGVzdHMgewp0LlJ1bih0dC5uYW1lLCBmdW5jKHQgKnRlc3RpbmcuVCkgewpnb3QsIGVyciA6PSB0dC5uLlZhbHVlKCkKaWYgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbFRpbWUuVmFsdWUoKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQpyZXR1cm4KfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZ290LCB0dC53YW50KSB7CnQuRXJyb3JmKCJOdWxsVGltZS5WYWx1ZSgpID0gJXYsIHdhbnQgJXYiLCBnb3QsIHR0LndhbnQpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsVGltZV9TY2FuKHQgKnRlc3RpbmcuVCkgewp0aW0gOj0gdGltZS5Ob3coKQp0ZXN0cyA6PSBbXXN0cnVjdCB7Cm5hbWUgICAgc3RyaW5nCm4gICAgICAgKk51bGxUaW1lCndhbnRFcnIgYm9vbApzcmMgICAgIGludGVyZmFjZXt9Cn17CnsKbmFtZTogInZhbGlkIiwKbjogJk51bGxUaW1lewpUaW1lOiAgdGltLApWYWxpZDogdHJ1ZSwKfSwKc3JjOiAgICAgdGltLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAibmlsIHZhbHVlIiwKbjogJk51bGxUaW1lewpUaW1lOiAgdGltLApWYWxpZDogZmFsc2UsCn0sCnNyYzogICAgIHRpbWUuTm93KCksCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlNjYW4odHQuc3JjKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbFRpbWUuU2NhbigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCn0KaWYgdHQubi5WYWxpZCA9PSBmYWxzZSAmJiB0dC5zcmMgIT0gbmlsIHsKdC5FcnJvcmYoInNob3VsZCByZXR1cm4gbnVsbCIpCn0KaWYgdHQubi5WYWxpZCAmJiB0dC5zcmMgIT0gdHQubi5UaW1lIHsKdC5FcnJvcmYoImludmFsaWQgdmFsdWUiKQp9Cn0pCn0KfQoKZnVuYyBUZXN0TnVsbFRpbWVfTWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbFRpbWUKd2FudCAgICBbXWJ5dGUKd2FudEVyciBib29sCn17CnsKbmFtZTogInZhbGlkIiwKbjogJk51bGxUaW1lewpUaW1lOiAgdGltZS5EYXRlKDIwMTcsIDExLCAyNCwgMCwgMCwgMCwgMCwgdGltZS5VVEMpLApWYWxpZDogdHJ1ZSwKfSwKd2FudDogICAgW11ieXRlKGAiMjAxNy0xMS0yNFQwMDowMDowMFoiYCksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJ2YWxpZCBudWxsIiwKbjogJk51bGxUaW1lewpWYWxpZDogZmFsc2UsCn0sCndhbnQ6ICAgIFtdYnl0ZShgbnVsbGApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAiaW52YWxpZCIsCm46ICZOdWxsVGltZXsKVmFsaWQ6IHRydWUsCn0sCndhbnQ6ICAgIFtdYnl0ZShgIjAwMDEtMDEtMDFUMDA6MDA6MDBaImApLAp3YW50RXJyOiBmYWxzZSwKfSwKfQpmb3IgXywgdHQgOj0gcmFuZ2UgdGVzdHMgewp0LlJ1bih0dC5uYW1lLCBmdW5jKHQgKnRlc3RpbmcuVCkgewpnb3QsIGVyciA6PSB0dC5uLk1hcnNoYWxKU09OKCkKaWYgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbFRpbWUuTWFyc2hhbEpTT04oKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQpyZXR1cm4KfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZ290LCB0dC53YW50KSB7CnQuRXJyb3JmKCJOdWxsVGltZS5NYXJzaGFsSlNPTigpID0gJXYsIHdhbnQgJXYiLCBnb3QsIHR0LndhbnQpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsSW50NjRfVW5tYXJzaGFsSlNPTih0ICp0ZXN0aW5nLlQpIHsKdGVzdHMgOj0gW11zdHJ1Y3QgewpuYW1lICAgIHN0cmluZwpuICAgICAgIE51bGxJbnQ2NApzb3VyY2UgIFtdYnl0ZQp3YW50RXJyIGJvb2wKfXsKewpuYW1lOiAgICAidmFsaWQiLApzb3VyY2U6ICBbXWJ5dGUoYDEyM2ApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAgICAiaW52YWxpZCIsCnNvdXJjZTogIFtdYnl0ZShgeyJrZXkiOiJ2YWx1ZSJ9YCksCndhbnRFcnI6IHRydWUsCn0sCnsKbmFtZTogICAgImVtcHR5IiwKc291cmNlOiAgW11ieXRle30sCndhbnRFcnI6IHRydWUsCn0sCn0KZm9yIF8sIHR0IDo9IHJhbmdlIHRlc3RzIHsKdC5SdW4odHQubmFtZSwgZnVuYyh0ICp0ZXN0aW5nLlQpIHsKaWYgZXJyIDo9IHR0Lm4uVW5tYXJzaGFsSlNPTih0dC5zb3VyY2UpOyAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsSW50NjQuVW5tYXJzaGFsSlNPTigpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsSW50NjRfVmFsdWUodCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICBOdWxsSW50NjQKd2FudCAgICBkcml2ZXIuVmFsdWUKd2FudEVyciBib29sCn17CnsKbmFtZTogInZhbGlkIiwKbjogTnVsbEludDY0ewpWYWxpZDogdHJ1ZSwKSW50NjQ6IDEyMywKfSwKd2FudDogICAgZHJpdmVyLlZhbHVlKGludDY0KDEyMykpLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAiaW52YWxpZCIsCm46IE51bGxJbnQ2NHsKVmFsaWQ6IGZhbHNlLAp9LAp3YW50OiAgICBuaWwsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmdvdCwgZXJyIDo9IHR0Lm4uVmFsdWUoKQppZiAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsSW50NjQuVmFsdWUoKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQpyZXR1cm4KfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZ290LCB0dC53YW50KSB7CnQuRXJyb3JmKCJOdWxsSW50NjQuVmFsdWUoKSA9ICV2LCB3YW50ICV2IiwgZ290LCB0dC53YW50KQp9Cn0pCn0KfQoKZnVuYyBUZXN0TnVsbEludDY0X1NjYW4odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbEludDY0CndhbnRFcnIgYm9vbApzcmMgICAgIGludGVyZmFjZXt9Cn17CnsKbmFtZTogInZhbGlkIiwKbjogJk51bGxJbnQ2NHsKSW50NjQ6IDEyMywKVmFsaWQ6IHRydWUsCn0sCnNyYzogICAgIGludDY0KDEyMyksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJuaWwgdmFsdWUiLApuOiAmTnVsbEludDY0ewpWYWxpZDogZmFsc2UsCn0sCnNyYzogICAgIGludDY0KDEyMyksCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmlmIGVyciA6PSB0dC5uLlNjYW4odHQuc3JjKTsgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbEludDY0LlNjYW4oKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQp9CmlmIHR0Lm4uVmFsaWQgPT0gZmFsc2UgJiYgdHQuc3JjICE9IG5pbCB7CnQuRXJyb3JmKCJzaG91bGQgcmV0dXJuIG51bGwiKQp9CmlmIHR0Lm4uVmFsaWQgJiYgdHQuc3JjICE9IHR0Lm4uSW50NjQgewp0LkVycm9yZigiaW52YWxpZCB2YWx1ZSIpCn0KfSkKfQp9CgpmdW5jIFRlc3ROdWxsSW50NjRfTWFyc2hhbEpTT04odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbEludDY0CndhbnQgICAgW11ieXRlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46ICZOdWxsSW50NjR7CkludDY0OiAxMjMsClZhbGlkOiB0cnVlLAp9LAp3YW50OiAgICBbXWJ5dGUoYDEyM2ApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAidmFsaWQgbnVsbCIsCm46ICZOdWxsSW50NjR7ClZhbGlkOiBmYWxzZSwKfSwKd2FudDogICAgW11ieXRlKGBudWxsYCksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJpbnZhbGlkIiwKbjogJk51bGxJbnQ2NHsKVmFsaWQ6IHRydWUsCn0sCndhbnQ6ICAgIFtdYnl0ZShgMGApLAp3YW50RXJyOiBmYWxzZSwKfSwKfQpmb3IgXywgdHQgOj0gcmFuZ2UgdGVzdHMgewp0LlJ1bih0dC5uYW1lLCBmdW5jKHQgKnRlc3RpbmcuVCkgewpnb3QsIGVyciA6PSB0dC5uLk1hcnNoYWxKU09OKCkKaWYgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbEludDY0Lk1hcnNoYWxKU09OKCkgZXJyb3IgPSAldiwgd2FudEVyciAldiIsIGVyciwgdHQud2FudEVycikKcmV0dXJuCn0KaWYgIXJlZmxlY3QuRGVlcEVxdWFsKGdvdCwgdHQud2FudCkgewp0LkVycm9yZigiTnVsbEludDY0Lk1hcnNoYWxKU09OKCkgPSAldiwgd2FudCAldiIsIGdvdCwgdHQud2FudCkKfQp9KQp9Cn0KZnVuYyBUZXN0TnVsbEZsb2F0NjRfVW5tYXJzaGFsSlNPTih0ICp0ZXN0aW5nLlQpIHsKdGVzdHMgOj0gW11zdHJ1Y3QgewpuYW1lICAgIHN0cmluZwpuICAgICAgIE51bGxGbG9hdDY0CnNvdXJjZSAgW11ieXRlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICAgICJ2YWxpZCIsCnNvdXJjZTogIFtdYnl0ZShgMTIzLjEyM2ApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAgICAiaW52YWxpZCIsCnNvdXJjZTogIFtdYnl0ZShgeyJrZXkiOiJ2YWx1ZSJ9YCksCndhbnRFcnI6IHRydWUsCn0sCnsKbmFtZTogICAgImVtcHR5IiwKc291cmNlOiAgW11ieXRle30sCndhbnRFcnI6IHRydWUsCn0sCn0KZm9yIF8sIHR0IDo9IHJhbmdlIHRlc3RzIHsKdC5SdW4odHQubmFtZSwgZnVuYyh0ICp0ZXN0aW5nLlQpIHsKaWYgZXJyIDo9IHR0Lm4uVW5tYXJzaGFsSlNPTih0dC5zb3VyY2UpOyAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsRmxvYXQ2NC5Vbm1hcnNoYWxKU09OKCkgZXJyb3IgPSAldiwgd2FudEVyciAldiIsIGVyciwgdHQud2FudEVycikKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxGbG9hdDY0X1ZhbHVlKHQgKnRlc3RpbmcuVCkgewp0ZXN0cyA6PSBbXXN0cnVjdCB7Cm5hbWUgICAgc3RyaW5nCm4gICAgICAgTnVsbEZsb2F0NjQKd2FudCAgICBkcml2ZXIuVmFsdWUKd2FudEVyciBib29sCn17CnsKbmFtZTogInZhbGlkIiwKbjogTnVsbEZsb2F0NjR7ClZhbGlkOiAgIHRydWUsCkZsb2F0NjQ6IDEyMy4xMjMsCn0sCndhbnQ6ICAgIGRyaXZlci5WYWx1ZShmbG9hdDY0KDEyMy4xMjMpKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogImludmFsaWQiLApuOiBOdWxsRmxvYXQ2NHsKVmFsaWQ6IGZhbHNlLAp9LAp3YW50OiAgICBuaWwsCndhbnRFcnI6IGZhbHNlLAp9LAp9CmZvciBfLCB0dCA6PSByYW5nZSB0ZXN0cyB7CnQuUnVuKHR0Lm5hbWUsIGZ1bmModCAqdGVzdGluZy5UKSB7CmdvdCwgZXJyIDo9IHR0Lm4uVmFsdWUoKQppZiAoZXJyICE9IG5pbCkgIT0gdHQud2FudEVyciB7CnQuRXJyb3JmKCJOdWxsRmxvYXQ2NC5WYWx1ZSgpIGVycm9yID0gJXYsIHdhbnRFcnIgJXYiLCBlcnIsIHR0LndhbnRFcnIpCnJldHVybgp9CmlmICFyZWZsZWN0LkRlZXBFcXVhbChnb3QsIHR0LndhbnQpIHsKdC5FcnJvcmYoIk51bGxGbG9hdDY0LlZhbHVlKCkgPSAldiwgd2FudCAldiIsIGdvdCwgdHQud2FudCkKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxGbG9hdDY0X1NjYW4odCAqdGVzdGluZy5UKSB7CnRlc3RzIDo9IFtdc3RydWN0IHsKbmFtZSAgICBzdHJpbmcKbiAgICAgICAqTnVsbEZsb2F0NjQKd2FudEVyciBib29sCnNyYyAgICAgaW50ZXJmYWNle30KfXsKewpuYW1lOiAidmFsaWQiLApuOiAmTnVsbEZsb2F0NjR7CkZsb2F0NjQ6IDEyMy4xMjMsClZhbGlkOiAgIHRydWUsCn0sCnNyYzogICAgIGZsb2F0NjQoMTIzKSwKd2FudEVycjogZmFsc2UsCn0sCnsKbmFtZTogIm5pbCB2YWx1ZSIsCm46ICZOdWxsRmxvYXQ2NHsKVmFsaWQ6IGZhbHNlLAp9LApzcmM6ICAgICBmbG9hdDY0KDEyMy4xMjMpLAp3YW50RXJyOiBmYWxzZSwKfSwKfQpmb3IgXywgdHQgOj0gcmFuZ2UgdGVzdHMgewp0LlJ1bih0dC5uYW1lLCBmdW5jKHQgKnRlc3RpbmcuVCkgewppZiBlcnIgOj0gdHQubi5TY2FuKHR0LnNyYyk7IChlcnIgIT0gbmlsKSAhPSB0dC53YW50RXJyIHsKdC5FcnJvcmYoIk51bGxGbG9hdDY0LlNjYW4oKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQp9CmlmIHR0Lm4uVmFsaWQgPT0gZmFsc2UgJiYgdHQuc3JjICE9IG5pbCB7CnQuRXJyb3JmKCJzaG91bGQgcmV0dXJuIG51bGwiKQp9CmlmIHR0Lm4uVmFsaWQgJiYgdHQuc3JjICE9IHR0Lm4uRmxvYXQ2NCB7CnQuRXJyb3JmKCJpbnZhbGlkIHZhbHVlIikKfQp9KQp9Cn0KCmZ1bmMgVGVzdE51bGxGbG9hdDY0X01hcnNoYWxKU09OKHQgKnRlc3RpbmcuVCkgewp0ZXN0cyA6PSBbXXN0cnVjdCB7Cm5hbWUgICAgc3RyaW5nCm4gICAgICAgKk51bGxGbG9hdDY0CndhbnQgICAgW11ieXRlCndhbnRFcnIgYm9vbAp9ewp7Cm5hbWU6ICJ2YWxpZCIsCm46ICZOdWxsRmxvYXQ2NHsKRmxvYXQ2NDogMTIzLjEyMywKVmFsaWQ6ICAgdHJ1ZSwKfSwKd2FudDogICAgW11ieXRlKGAxMjMuMTIzYCksCndhbnRFcnI6IGZhbHNlLAp9LAp7Cm5hbWU6ICJ2YWxpZCBudWxsIiwKbjogJk51bGxGbG9hdDY0ewpWYWxpZDogZmFsc2UsCn0sCndhbnQ6ICAgIFtdYnl0ZShgbnVsbGApLAp3YW50RXJyOiBmYWxzZSwKfSwKewpuYW1lOiAiaW52YWxpZCIsCm46ICZOdWxsRmxvYXQ2NHsKVmFsaWQ6IHRydWUsCn0sCndhbnQ6ICAgIFtdYnl0ZShgMGApLAp3YW50RXJyOiBmYWxzZSwKfSwKfQpmb3IgXywgdHQgOj0gcmFuZ2UgdGVzdHMgewp0LlJ1bih0dC5uYW1lLCBmdW5jKHQgKnRlc3RpbmcuVCkgewpnb3QsIGVyciA6PSB0dC5uLk1hcnNoYWxKU09OKCkKaWYgKGVyciAhPSBuaWwpICE9IHR0LndhbnRFcnIgewp0LkVycm9yZigiTnVsbEZsb2F0NjQuTWFyc2hhbEpTT04oKSBlcnJvciA9ICV2LCB3YW50RXJyICV2IiwgZXJyLCB0dC53YW50RXJyKQpyZXR1cm4KfQppZiAhcmVmbGVjdC5EZWVwRXF1YWwoZ290LCB0dC53YW50KSB7CnQuRXJyb3JmKCJOdWxsRmxvYXQ2NC5NYXJzaGFsSlNPTigpID0gJXYsIHdhbnQgJXYiLCBnb3QsIHR0LndhbnQpCn0KfSkKfQp9CgpmdW5jIFRlc3RUb051bGxCb29sKHQgKnRlc3RpbmcuVCkgewpiIDo9IHRydWUKYmIgOj0gVG9OdWxsQm9vbCgmYikKaWYgIWJiLlZhbGlkIHsKdC5FcnJvcmYoImV4cGVjdGVkIHZhbGlkLCBnb3QgJXYiLCBiYi5WYWxpZCkKfQppZiAhYmIuQm9vbCB7CnQuRXJyb3JmKCJleHBlY3RlZCB0cnVlLCBnb3QgJXYiLCBiYi5Cb29sKQp9Cgp2YXIgYjIgKmJvb2wKYmIyIDo9IFRvTnVsbEJvb2woYjIpCmlmIGJiMi5WYWxpZCB7CnQuRXJyb3JmKCJleHBlY3RlZCBub3QgdmFsaWQsIGdvdCAldiIsIGJiMi5WYWxpZCkKfQppZiBiYjIuQm9vbCB7CnQuRXJyb3JmKCJleHBlY3RlZCBmYWxzZSwgZ290ICV2IiwgYmIyLkJvb2wpCn0KfQpmdW5jIFRlc3RUb051bGxJbnQ2NCh0ICp0ZXN0aW5nLlQpIHsKYiA6PSBpbnQ2NCgxMjMpCmJiIDo9IFRvTnVsbEludDY0KCZiKQppZiAhYmIuVmFsaWQgewp0LkVycm9yZigiZXhwZWN0ZWQgdmFsaWQsIGdvdCAldiIsIGJiLlZhbGlkKQp9CmlmIGJiLkludDY0ICE9IDEyMyB7CnQuRXJyb3JmKCJleHBlY3RlZCAxMjMsIGdvdCAldiIsIGJiLkludDY0KQp9Cgp2YXIgYjIgKmludDY0CmJiMiA6PSBUb051bGxJbnQ2NChiMikKaWYgYmIyLlZhbGlkIHsKdC5FcnJvcmYoImV4cGVjdGVkIG5vdCB2YWxpZCwgZ290ICV2IiwgYmIyLlZhbGlkKQp9CmlmIGJiMi5JbnQ2NCAhPSAwIHsKdC5FcnJvcmYoImV4cGVjdGVkIDAsIGdvdCAldiIsIGJiMi5JbnQ2NCkKfQp9CgpmdW5jIFRlc3RUb051bGxGbG9hdDY0KHQgKnRlc3RpbmcuVCkgewpiIDo9IGZsb2F0NjQoMTIzLjEyMykKYmIgOj0gVG9OdWxsRmxvYXQ2NCgmYikKaWYgIWJiLlZhbGlkIHsKdC5FcnJvcmYoImV4cGVjdGVkIHZhbGlkLCBnb3QgJXYiLCBiYi5WYWxpZCkKfQppZiBiYi5GbG9hdDY0ICE9IDEyMy4xMjMgewp0LkVycm9yZigiZXhwZWN0ZWQgMTIzLjEyMywgZ290ICV2IiwgYmIuRmxvYXQ2NCkKfQoKdmFyIGIyICpmbG9hdDY0CmJiMiA6PSBUb051bGxGbG9hdDY0KGIyKQppZiBiYjIuVmFsaWQgewp0LkVycm9yZigiZXhwZWN0ZWQgbm90IHZhbGlkLCBnb3QgJXYiLCBiYjIuVmFsaWQpCn0KaWYgYmIyLkZsb2F0NjQgIT0gMCB7CnQuRXJyb3JmKCJleHBlY3RlZCAwLCBnb3QgJXYiLCBiYjIuRmxvYXQ2NCkKfQp9CmZ1bmMgVGVzdFRvTnVsbFN0cmluZyh0ICp0ZXN0aW5nLlQpIHsKYiA6PSAicXdlIgpiYiA6PSBUb051bGxTdHJpbmcoJmIpCmlmICFiYi5WYWxpZCB7CnQuRXJyb3JmKCJleHBlY3RlZCB2YWxpZCwgZ290ICV2IiwgYmIuVmFsaWQpCn0KaWYgYmIuU3RyaW5nICE9ICJxd2UiIHsKdC5FcnJvcmYoImV4cGVjdGVkIHF3ZSwgZ290ICV2IiwgYmIuU3RyaW5nKQp9Cgp2YXIgYjIgKnN0cmluZwpiYjIgOj0gVG9OdWxsU3RyaW5nKGIyKQppZiBiYjIuVmFsaWQgewp0LkVycm9yZigiZXhwZWN0ZWQgbm90IHZhbGlkLCBnb3QgJXYiLCBiYjIuVmFsaWQpCn0KaWYgYmIyLlN0cmluZyAhPSAiIiB7CnQuRXJyb3JmKCJleHBlY3RlZCA8ZW1wdHkgc3RyaW5nPiwgZ290ICV2IiwgYmIyLlN0cmluZykKICAgIH0KICAgIH0KICAgIGZ1bmMgVGVzdFRvTnVsbFRpbWUodCAqdGVzdGluZy5UKSB7CiAgICB0aW0gOj0gdGltZS5Ob3coKQogICAgYmIgOj0gVG9OdWxsVGltZSh0aW0pCiAgICBpZiAhYmIuVmFsaWQgewogICAgdC5FcnJvcmYoImV4cGVjdGVkIHZhbGlkLCBnb3QgJXYiLCBiYi5WYWxpZCkKICAgIH0KICAgIGlmIGJiLlRpbWUgIT0gdGltIHsKICAgIHQuRXJyb3JmKCJleHBlY3RlZCAldiwgZ290ICV2IiwgdGltLCBiYi5UaW1lKQogICAgfQoKICAgIHRpbSA9IHRpbWUuVGltZXt9CiAgICBiYiA9IFRvTnVsbFRpbWUodGltKQogICAgaWYgYmIuVmFsaWQgewogICAgdC5FcnJvcmYoImV4cGVjdGVkIGludmFsaWQsIGdvdCAldiIsIGJiLlZhbGlkKQogICAgfQogICAgaWYgYmIuVGltZSAhPSB0aW0gewogICAgdC5FcnJvcmYoImV4cGVjdGVkICV2LCBnb3QgJXYiLCB0aW0sIGJiLlRpbWUpCiAgICB9CiAgICB9Cnt7ZW5kfX0K\"")
	}
