// Code generated by go-bindata.
// sources:
// tmpl/model.html
// tmpl/x_helpers.html
// tmpl/x_helpers_test.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplModelHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x6d\x6f\xe3\x44\x10\xfe\xee\x5f\x31\x58\xe5\x64\xe7\x72\x4e\x3f\x20\x3e\x14\x05\x74\x24\xae\x88\xc8\x25\xa5\x49\x41\x08\xa1\xbb\x8d\x3d\x6e\x97\xda\xbb\xe9\xee\x3a\x69\xe5\xfa\xbf\xa3\x7d\xc9\xbb\x1b\x52\x71\x20\xb0\x14\xc9\x59\xcf\xce\xf3\xcc\x33\x2f\xf6\x56\x55\x8a\x19\x65\x08\x7e\xc1\x53\xcc\xfd\xba\xf6\xe6\x24\xb9\x27\xb7\x08\x55\x05\xd1\x95\xbd\x1f\x91\x02\xa1\xae\x3d\xaf\xd3\x7a\xf7\xf2\xf5\xd6\x7b\x86\x1e\x4f\x11\x6e\x91\xa1\x20\x0a\x53\x98\x3d\x81\xf1\x7b\x8b\x0c\x9e\xbd\x67\x70\x57\x7f\x0c\xa3\xf1\x14\xe2\xfe\x60\x1a\xad\xd6\x9e\xbd\xb7\x47\x7c\xb7\x3a\x9e\xd7\xe9\xc0\x20\x83\x27\x5e\xc2\x92\x30\x05\x8a\x03\x3e\x2a\x64\x29\xcc\xf0\x8e\x2c\x28\x2f\xc5\x85\xb6\xb9\xca\x91\x48\x84\x44\x20\x51\x08\x04\x92\x52\x2a\x5e\x40\x46\x73\x04\xca\x40\xdd\x51\x09\x29\x15\x98\x28\x2e\x9e\xf4\x06\xc2\xd2\x95\xb5\xba\x43\x28\x50\xdd\xf1\x54\xea\x7b\x81\x1a\x85\x2c\x38\x4d\x81\x2f\x50\x2c\x05\x55\x94\xdd\x6a\x0e\x02\x12\x1d\xea\x92\xaa\x3b\xb3\x6b\x13\x33\x67\x18\x79\x1e\x2d\xe6\x5c\x28\x08\x3c\x3f\x2b\x94\xef\xf9\x29\x51\x64\x46\x24\x76\xe4\x43\xee\x7b\x3a\xe0\xaa\x02\x41\xd8\x2d\xc2\xd9\x7d\x1b\xce\x16\x17\x5d\x88\x3e\x68\xad\xa2\x81\xd9\x2a\xb5\xe0\xda\xce\xaf\xaa\xb3\xfb\xba\x5e\x6d\x7a\x07\x3a\xe4\xba\xf6\x42\xa3\x48\x55\xb9\x5d\x3a\x47\x75\x0d\x02\xe7\x02\x25\x32\x25\x81\x80\xe0\x4b\x1b\x32\x6e\xec\xa6\x64\x96\xa3\x33\x56\xfa\xde\x53\x4f\x73\x3c\xf0\x23\x95\x28\x13\x05\xd5\x71\xaa\x97\x14\xf3\x74\xcd\xd4\x99\x9e\x2d\x22\x57\x30\xee\xdf\x54\x03\xd4\x35\x7c\xfa\x43\x72\x76\xa1\xe3\x59\x44\x3d\x9e\x97\x05\xb3\x60\xfe\xa7\xfd\xd8\x78\x96\x49\x54\x40\x99\xf2\x72\x5a\x50\x7b\x57\xdb\x12\x60\x12\x85\x02\x02\x0c\x97\x87\xd1\x9f\x14\x70\x56\xb2\x04\x82\xaa\x8a\xae\x31\x41\xba\x40\x51\xd7\xd0\xda\x73\x15\x3a\xa0\x20\x9d\x41\x4b\x3e\xe4\x51\xff\xfb\x10\x82\x9c\x48\x65\xd7\x07\x7d\xcd\xe9\xeb\xaf\xda\x80\x42\xe8\x1f\x17\xa1\x53\x2b\xe1\x4c\x2a\x90\xaa\x50\xd0\x05\x7f\x30\x9a\xc4\xd7\x53\x18\x8c\xa6\xe3\x66\x4e\xc1\x7a\xd5\xa9\xf9\x0c\xd4\x40\x7c\xcc\xcc\x7f\xcd\xe5\xe7\xf7\xc3\x9b\x78\x72\xc4\x74\x41\xf2\x12\xb5\xa9\x2d\x13\x81\xd2\x12\xbb\xe8\x42\x3a\x8b\xe2\x47\x4c\x02\x4d\xa8\x6d\xba\x7a\xb3\x8d\x88\x5b\x9d\xbd\xd0\x6c\xa2\x99\xd9\xf2\x45\x17\x18\xcd\x5d\x2c\xd6\x99\x2a\x05\x83\x73\xe3\xd1\xac\xd6\xde\xd6\xba\x40\x19\x0d\x37\xba\xa4\x41\xe8\x32\x75\x33\x4f\x4d\x07\x32\xc0\x47\x2a\x4d\xe3\xfc\x93\xf9\xb2\x70\x5b\xf9\x6a\x03\x4d\x6d\x92\x42\x9b\xa0\xc6\xfc\xdc\x5c\xf5\xdf\x4f\xe3\x66\xf8\x49\x3c\x5d\x09\x56\x1a\xef\x4e\x67\x5d\xcc\xbf\xfc\x10\x5f\xc7\x1a\xa1\x0b\xdf\x59\xd1\x3f\x1e\x97\xdc\x79\x70\x92\x83\x66\x17\x6e\xeb\xa8\xc5\x5d\x09\x67\x4a\xdc\xe6\x48\xfe\xad\x52\xef\x74\x74\x5a\xb5\x51\xc9\xe8\x43\x89\x36\x78\x41\xa8\x19\x10\x02\x81\x71\x05\x19\x2f\x59\xda\x06\xae\x27\xde\x92\x4a\x04\xaa\x1c\x5b\x09\x54\x45\x27\xeb\xff\x7f\xec\x17\x18\x8f\xa0\x7f\x73\x35\x1c\xf4\x74\x15\xfc\x18\xff\x0a\xeb\x82\x70\x59\xdb\xb2\x87\xd5\x18\xfe\x4f\xf4\xd7\x25\x65\xe9\xbf\xd6\x5d\x1a\xec\xd5\xbd\x35\x89\x87\x71\x6f\x0a\x2d\xb8\xbc\x1e\x7f\x68\xe6\x70\xd8\x46\x9a\xb5\x95\xf5\xa7\x12\xc5\xd3\x35\x5f\x3a\x69\xf7\xfa\x45\xf0\x65\x34\x49\x08\x0b\x9c\xe4\x32\x21\x6c\x53\x02\x4e\xa3\x21\x27\x29\x90\x3c\x6f\x03\x17\x40\x40\x96\x33\xfd\x5e\xe1\x59\x93\x56\x12\x32\xc1\x8b\xcf\x23\x97\xc6\xdd\x6d\x05\x8d\xfb\xdb\xef\x7b\x86\x0d\xdd\x60\xb4\xbb\x38\x49\x3c\xdf\x5b\xd5\xd5\x0e\x9d\xc8\xbe\x32\xbb\x5d\x38\x87\x37\x6f\xf6\x9e\xb9\x37\xeb\xb7\x70\x7e\x58\x81\x12\x55\x1b\xb2\x42\x45\xb1\x26\x94\x05\x7e\x42\x98\x9e\x0f\x0f\x3a\x0f\xf6\x53\xc7\x6d\x9f\x95\x0a\x18\x07\x03\xe4\x87\xae\x66\x8f\x91\xd9\xc5\x33\x31\xbe\xed\x1a\xac\xc9\x5c\x50\xa6\xb2\xc0\x87\xe1\xe0\xc3\x60\x0a\x5f\xa6\x7e\xbb\xc9\x45\xb8\xd5\x19\x07\x20\x8d\x51\x35\xa3\x8c\x2f\x2f\xf5\x58\x6f\x80\xb1\x4e\xb6\x71\x52\xcc\x50\x80\xce\x78\x10\x6e\x39\x6e\x54\x1b\xce\x5f\x78\xee\xb8\xad\x0c\xea\x20\x5c\x95\xf9\xce\x0c\x31\xc5\x6e\x2a\xfd\x94\x69\x71\x40\x52\xbb\x8b\x7a\x39\x97\xe8\xfc\xeb\x2b\xe3\xee\xc1\x08\x1f\xd5\x4e\x08\x5b\x08\x5d\x6b\xe2\x5a\xe9\xb0\x93\xbe\x69\xe6\xb1\xc7\x65\xc3\xc7\x48\x6f\x02\x26\xf3\x39\xb2\x34\x30\x65\xd5\xda\x11\x65\xa7\x64\x9c\x17\xdb\xb0\x7d\xcc\xf1\x84\x8f\x86\xcf\xd7\xa9\x16\xf0\xd5\xa3\xad\x1f\x0f\xe3\x69\xfc\xaa\xc1\xf6\xd2\xf7\xc1\x8b\xdf\x01\x3d\x5e\xea\x73\xce\x1d\x02\x2b\x8b\x19\x0a\x3d\xb7\x5e\x35\xa7\xfe\x32\x78\x83\xb0\x3b\xa7\x12\x03\x7a\xda\xbb\xda\x8d\xa8\xde\xf8\x66\x34\x0d\x5a\xe1\xb1\x49\x75\x64\xb2\xef\xd4\x7b\x77\x33\xd7\xdf\x18\x2a\x2f\xd5\xdf\x41\x1f\xec\x94\xd1\x1a\xdb\x2d\x9b\xe3\x9c\x55\x06\x18\x29\x4e\x2d\x8e\xb5\x9b\x20\xd4\x27\x22\x53\x8d\x9e\xcb\x93\xdf\x1c\xa8\xc5\x9f\xa0\x1a\x9a\xb9\x20\x51\x59\x6c\x3b\x44\xcd\xb0\x38\x11\x7c\xe5\x23\x58\x1f\x81\xc2\x03\x2b\xa8\xbc\xe6\x69\x64\x81\x1c\xd5\x1d\x93\x0d\xc3\xb1\x9d\x4c\x7b\x14\xed\xbc\x3a\x9d\xa3\xf5\x12\x6c\x8e\x6c\x27\xb0\x5c\xcf\x44\x07\xf6\x02\xcf\xaa\x42\x96\xd6\xb5\xe7\xfd\x19\x00\x00\xff\xff\x8a\x98\x81\x7e\xa7\x10\x00\x00")

func tmplModelHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplModelHtml,
		"tmpl/model.html",
	)
}

func tmplModelHtml() (*asset, error) {
	bytes, err := tmplModelHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/model.html", size: 4263, mode: os.FileMode(420), modTime: time.Unix(1512464079, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplX_helpersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5b\x8f\xdb\x36\x13\x7d\xe7\xaf\x98\xe8\xe1\x83\xe4\x38\x52\x3e\x24\x29\x50\x17\x7e\xc9\x0d\xdd\xa2\xd9\x4d\xb3\x6e\x5e\x8a\x02\xa1\x2d\xca\xcb\x54\xa2\x1c\x92\xde\xc5\xc2\xeb\xff\x5e\xf0\x26\x52\xb2\x2d\xd9\x7b\xe9\x3e\x78\x6d\x6a\xe6\xf0\xcc\xf0\x0c\xc5\xe1\x66\x93\x93\x82\x32\x02\xd1\x15\x29\x57\x84\x8b\x68\xbb\x45\x2b\xbc\xf8\x07\x2f\x09\x6c\x36\x90\x7e\x36\xdf\xcf\x71\x45\x60\xbb\x45\x28\x1b\xbd\x38\xfc\xf7\x1c\xdd\xc1\xbb\x3a\x27\xb0\x24\x8c\x70\x2c\x49\x0e\xf3\x5b\xa8\xea\x9c\x94\x4b\xc2\xe0\x0e\xdd\x81\xfd\x7b\x7f\x01\xe7\x17\x33\xf8\xf0\xfe\x6c\x96\xba\xb1\x3b\xf4\xbc\x07\x7b\x94\x21\x44\xab\x55\xcd\x25\xc4\x28\xca\xb1\xc4\x73\x2c\x48\x26\x7e\x94\x51\xfb\x67\x96\x73\x7a\x4d\x78\x84\x22\xc2\x16\x75\x4e\xd9\x32\xfb\x2e\x6a\x16\xa1\x88\x93\xa2\x24\x0b\x19\xa1\x48\x48\x4e\xd9\x52\x44\x28\x92\xb4\x22\x11\x42\xd1\x92\xca\xab\xf5\x3c\x5d\xd4\x55\xb6\xac\x5f\x88\x1f\xe5\x0b\x03\x93\x55\xb7\x7a\x8a\x04\xa1\x2c\x83\x4b\x99\xcf\x68\x45\x60\xc5\xeb\x6b\x9a\x13\x01\x39\x29\xf0\xba\x94\x70\xf9\xc7\xef\x30\x3b\xfb\xf4\x01\x8a\x9a\x57\x58\xa2\x45\xcd\x84\x6c\xcc\xa7\x10\xfd\xff\xcd\xe4\xe5\xeb\xc9\xcb\x37\x91\xc6\x21\xd5\x4a\xde\xea\x47\xb8\x2c\xeb\x1b\x8f\xa3\xe8\x08\x90\x35\xcc\x09\x28\x0c\x9a\x13\x4e\x72\xe5\xc2\xd6\x65\xa9\xd0\x81\x32\x41\xb8\xa4\x35\x03\xca\x64\x0d\xf2\x8a\x80\x0b\x3f\x45\xd7\x98\x07\xe0\x53\x8d\x97\xaa\xef\x9b\xdd\xb5\x53\xab\x35\xbb\x5d\x29\x0e\x14\x0b\x22\x76\x16\x40\xa5\x3c\xcb\xe0\x7c\x5d\x96\x1f\xcb\x1a\xcb\x9f\x5e\x37\xa6\xe2\x47\x99\x06\xe3\x48\x2a\x9c\xd0\xb0\x6b\xe0\x80\x2e\x75\xe6\x77\x70\xcc\xb0\x87\xb1\x66\x9d\xc7\x0e\xe4\x6d\x5d\x97\x3b\x10\x6a\xd0\x03\x68\x93\xd6\x23\xe7\x7c\xc6\xf6\x05\xa2\x47\xbd\xbb\x31\x6a\x3f\x74\x00\x76\xdd\xda\xfe\x6a\xd0\xbb\x6b\x13\xad\x1c\xff\x50\xb9\x7f\xc1\x37\xbf\x5d\x5e\x9c\x37\xde\x4a\x98\xe9\x17\x7c\xf3\x89\x08\x81\x97\x16\xc0\x19\x75\x1f\x0e\xd7\x5e\x90\x39\x5a\xad\x4a\x52\x11\x26\xb1\x92\xca\xee\xda\xee\x16\x57\x96\xc1\x27\xcc\xc5\x15\x2e\xf5\xec\x4a\x6a\x41\xea\x8b\x35\x5b\x40\xcc\x82\xa1\x24\x34\x8f\x13\x88\xff\xfa\x7b\x7e\x2b\xc9\x18\x08\xe7\x35\x4f\x60\xa3\xc5\x88\x61\x64\x8a\x0d\xd1\x02\x58\xfa\x15\x97\x34\x87\x0d\xc2\x30\x85\xff\xb1\xd4\x82\x6f\x11\x27\x72\xcd\x99\x09\xd9\xc2\xc6\x38\x41\x5b\x4d\xeb\x4f\x56\x0d\x13\x1b\x85\xcc\x5a\x1e\xf1\x1c\x0c\xb5\xc4\x50\x83\x0d\x22\x9c\xc3\x64\x6a\xa6\x6b\x6c\xe3\xf9\xd8\x73\x4a\x90\x23\x3b\x55\x5e\x30\x9d\x02\xa3\xa5\xe3\x49\x38\xb7\xdc\xbe\xe2\x72\x4d\x8e\x49\x96\x36\x54\x69\x32\xfb\x4a\xaa\x7f\x07\xc9\xa2\x05\x3c\xf3\xf9\xb1\xf3\x30\x5a\x8e\xf5\xbc\x4d\x86\x1c\x3f\x37\xac\x77\xa5\x05\x66\x47\xa5\x45\x19\xc6\x82\x2f\xd4\xce\x41\x78\x81\x17\x64\xb3\xf5\x49\x31\xcb\xd5\x29\x39\x5a\x80\x4d\x16\x4e\x9d\x7b\xf2\x8b\x1e\x7b\xa6\x53\xe2\xc9\x9a\xa4\x38\x82\xa0\x3d\x1a\x10\xbb\xf7\xa6\x6a\xc3\xb9\x28\x34\x8a\x07\xf0\xa9\x96\x7c\x4d\x82\x60\x6d\x88\x7d\xba\x6f\x84\xef\x76\x9e\xd3\x94\xdf\x27\x7d\xb7\x77\x85\xcb\x69\xc7\x8e\x16\x7f\x61\x31\xf6\xa9\xdf\xe1\x0f\xc8\xbf\x2d\xb1\x5e\x52\x8f\x26\x32\x8b\x18\xaa\x6c\x7f\x15\x76\xe9\x8c\x5a\x7c\x1e\x52\x87\x0e\xe4\xc8\x42\x6c\x15\x41\x3f\xab\x53\xca\xe0\xa3\x5f\xbf\x53\xeb\xc0\x09\x52\xb9\x04\x30\x4f\x55\x09\xae\x0e\xcc\xab\xeb\xa4\x2a\xe8\xa9\x01\xf3\xea\x0b\xc5\xa6\x47\x8e\xd6\x3f\x65\x87\xd4\x6f\x90\x4f\xd2\xfe\x41\x32\x8f\xa6\x7b\x8d\x37\xac\xfa\x36\x91\x51\xc0\xe4\x21\x8a\x37\x10\xf7\xd1\xfb\x61\x3e\xa7\x68\xfd\x8c\xdd\x53\xe9\x46\x72\xca\xa1\x81\x78\x22\x95\x3b\x91\xeb\xe3\xdd\x29\x1a\xef\x91\xb8\x3e\x1d\x86\xa2\x52\x03\x47\x0b\x7c\xae\xbc\xf7\xe9\x5b\xc3\x9e\x24\xef\x03\x44\x1e\x4d\xdc\x0a\x6e\x58\xdb\x2d\x16\x23\x4f\xe3\x21\xca\xd6\x08\xf7\x11\xf6\x21\x32\xa7\xc8\xfa\xad\x5d\xa1\x53\x55\xad\x35\xa6\xec\x1d\xc0\x13\x6b\x5a\x37\x0d\x8f\xa4\x69\xdd\x71\x84\x52\x52\x03\x47\x6b\xba\xe9\x1a\xf7\x0a\x5b\x3f\x38\x49\xd8\x07\xd8\x3c\x9a\xb0\x15\xdc\xb0\xb0\x5b\x2c\x46\x9e\xc6\x90\xb0\x85\x52\x8d\x69\x62\xe2\x79\x82\x04\xb8\x5f\x22\x9d\x71\x5a\xc5\x62\x0c\xdf\xa2\x6f\x09\x92\xb4\x1a\x3b\x91\xe9\x0c\x7e\xc6\x5c\x90\x58\x7f\xfd\xf2\xf1\xdd\xab\x57\xaf\x7e\x1e\x83\x48\x9c\x14\xf7\x28\xa7\xc0\xa5\x20\x9d\x8a\x30\xd1\x99\x56\xbe\x2b\xb2\x8e\xc4\x3a\xb5\x73\x28\xde\x63\x6a\xa7\xd3\xbb\xde\xa3\x7a\x2c\x6b\xdc\xe8\xe8\x69\xaa\x47\x15\x8f\x6b\x98\x4f\xa8\x9d\xe3\x1b\x5e\x0b\x3e\x5c\x3b\xb8\xd9\xfd\x7c\xcf\x1e\xb3\xc4\x45\x82\xd3\x16\xc0\x31\xed\x63\x33\xf5\x50\xa1\xd8\x29\xac\x46\x59\x32\x5c\x0b\xdd\x2e\xb1\x99\x6a\xa8\x18\x8c\x3c\xba\x57\x13\x7b\x36\x7d\x9c\xa0\x85\xca\x88\x45\x56\x5b\xc3\x88\xc1\x14\x16\x03\xaa\x3d\xc8\xec\xbf\x68\x5e\xbf\x0b\x16\x72\x36\xc1\xc7\xae\x8f\x4d\x6c\x08\xdf\x05\x1b\xd6\xa7\x12\xe6\xaf\xfa\x4e\x15\x54\x2c\x87\x15\x69\xa5\x38\xab\x83\xdb\x1b\x83\x2e\x00\x03\x23\x37\x3b\x69\x09\x4d\x63\xe1\x2e\x58\x92\xf0\xfa\x47\x6f\x9e\xc2\xbe\x63\x7d\x94\xa1\x5f\x2b\x55\x1b\x5d\x7e\x13\xb3\x03\x6d\x13\x5f\x80\x87\x3d\xcc\xbf\x09\x8c\xc4\x18\xac\xb7\xaa\xdd\xad\x93\xb6\x61\x69\x8e\x86\xbb\xf1\x04\x27\xd6\xc0\x30\xa6\xb6\x63\x48\x82\x56\x46\xc7\x42\xf7\xc6\x62\x9c\x5a\xe7\xd7\xde\x48\xf6\xd9\xeb\xcf\x09\x8c\x68\x5f\x18\xae\x97\xdb\x0d\xa4\xd5\x6a\xb6\x8c\x55\x30\x85\xeb\x39\x43\x90\x9e\x80\x9c\x6b\xa7\xfd\xec\x0d\xea\x90\x8f\xfd\x3f\x14\x9a\x3e\xe6\x2c\x38\xc1\x92\x84\x71\xf9\x93\x97\x37\x8b\xe7\xe6\xbc\x9b\xf8\x33\xb8\x8e\x65\xbe\x37\x16\xed\x11\x1e\xc2\x7a\xa3\xd8\xb5\x56\x1f\x13\x18\xcd\xfb\xc8\xeb\xb7\xcc\x2e\x79\xff\xea\xf3\x66\xb1\xf4\xb7\xe1\x89\x3f\x70\xe9\x00\xa4\x0a\xc0\xdf\x9b\xb7\xc2\xd0\xbe\xed\xf7\x61\x6f\x20\xfb\xec\xd5\xc7\x04\xe4\x6e\x24\x9b\x0d\x61\xf9\x76\x8b\xfe\x0d\x00\x00\xff\xff\x3d\x55\xcc\xe2\x88\x19\x00\x00")

func tmplX_helpersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplX_helpersHtml,
		"tmpl/x_helpers.html",
	)
}

func tmplX_helpersHtml() (*asset, error) {
	bytes, err := tmplX_helpersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/x_helpers.html", size: 6536, mode: os.FileMode(420), modTime: time.Unix(1512460598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplX_helpers_testHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x7d\x6f\xdb\x36\x1a\xff\x9f\x9f\x82\x21\xb0\xc0\xca\x14\xc5\x76\x8a\x3b\x40\xbb\x1c\xb0\x36\x29\xb0\x03\x9a\x1e\x56\x6f\x7f\xdc\x30\x2c\x92\x4d\x3b\xba\xe9\xc5\x95\xe8\xe4\x02\x57\xdf\xfd\xc0\x87\xd4\x0b\x25\xca\x8e\x64\xae\x75\x80\x14\x41\xea\x50\x0f\x9f\xd7\x1f\x1f\xfe\x64\x51\xdb\xed\x82\x2e\x83\x98\x62\x72\x4f\xc3\x35\x4d\x33\x46\x33\x46\xf2\x1c\xad\xbd\xf9\x9f\xde\x8a\xe2\xed\x16\x3b\xff\x16\x9f\x6f\xbd\x88\xe2\x3c\x47\x17\x67\xe7\xdd\xff\xbe\x47\x5f\xf0\xbb\x64\x41\xf1\x8a\xc6\x34\xf5\x18\x5d\x60\xff\x09\x47\xc9\x82\x86\x2b\x1a\xe3\x2f\xe8\x0b\x96\xff\xae\x3f\xe2\xdb\x8f\x33\x7c\x73\xfd\xd3\xcc\x29\xc6\xbe\xa0\xef\x77\xe8\x3e\xbb\x40\x28\x88\xd6\x49\xca\xf0\x08\x91\x85\xc7\x3c\xdf\xcb\xe8\x45\xf6\x39\xbc\x58\xa4\xc1\x03\x4d\x09\x22\x34\x9e\x27\x8b\x20\x5e\x5d\xfc\x37\x4b\x62\x82\x48\x4a\x97\x21\x9d\x33\x82\x08\x8f\x2c\x88\x57\xfc\x53\x10\x51\x82\x10\x59\x05\xec\x7e\xe3\x3b\xf3\x24\xba\x58\x78\x0f\x74\xbe\xba\xbf\x58\x25\xe7\xd9\x9a\x3e\x5e\xf0\x5f\x04\x59\x08\x2d\x37\xf1\x1c\xcf\x68\xc6\x3e\xb1\x74\x33\x67\x37\x91\x4f\x17\x5c\xff\x88\xe1\x33\xa9\xd1\x99\x59\x78\x8b\x58\x10\x61\xf7\x0a\x73\xdd\xce\xb5\xc7\xe8\x68\x3a\x9e\xfc\xdd\xc6\x13\xf8\x19\xd7\x7e\x40\xe2\x97\xd9\x3b\x0b\xd1\xff\xad\xe9\x9c\x67\xc8\xbd\xc2\xbf\xfd\xee\x3f\x31\x3a\xba\xdb\x12\x8f\xb8\x93\xe9\xa5\x4d\x7c\xe2\xb2\x74\x43\x6d\x32\x87\x01\x07\x06\x17\xc4\x25\x19\x4b\x79\x1c\x36\xa1\xc4\x25\xdc\xca\xf9\x78\x72\x3e\x9e\xcc\xc6\x63\x17\x7e\xfe\x43\x6c\xb2\x24\xee\x6f\x13\x7b\x6a\x5f\xfe\x9e\xdf\x59\x88\x3d\xad\x29\xa6\xdc\x75\x9c\x41\x18\x78\x8b\x7e\xc4\xb7\x9b\x30\xfc\x29\x66\x7f\x7b\x83\x31\xbe\xe3\xe9\x72\x89\x67\x27\x51\xc0\x68\xb4\x66\x4f\xe4\x0e\xbd\x05\x91\xb7\x49\x12\xe2\x4a\xc4\x57\x44\xde\x81\xc8\xfb\x30\xf1\xb8\x1e\x29\x32\x57\x44\xae\x41\xe4\x13\x38\x5d\x6a\x59\x28\x22\x37\x20\x32\x0b\x22\x5a\x33\x44\x15\x91\xf7\xf8\x67\xef\xf1\x5f\x9f\x3e\xde\xe2\x9a\xc8\x52\x11\xc9\x11\x85\x12\x40\xa0\x5b\xf4\xa3\x5b\x45\xb8\xfd\xd5\x0b\x83\x85\x8b\x21\xa1\x18\x86\x5c\x3c\x99\x5e\xe6\x36\x7a\xeb\x96\x51\xaa\x52\x7c\x44\x7c\xce\x6d\xf4\xce\xad\x07\xaa\x0a\xca\x41\x50\xe8\x08\xa5\xd7\x6e\x2d\x68\x55\x5a\x8c\xb9\xb8\x28\x63\x6e\xa3\x1b\xb7\x8c\x5f\x95\xe5\x23\x2e\x07\x4c\x6e\xa3\xf7\x6e\x91\x81\xd1\x9d\x2c\xed\x9d\x65\xa3\x1c\xf9\x36\xa6\x69\xca\x03\xe7\x49\x71\x3e\x78\x69\x76\xef\x85\x23\x1a\x59\x28\x58\xc2\xa5\x93\x2b\x1c\x07\x21\xc7\xa8\xf3\xde\x63\xfc\x5a\x9a\x5a\x28\xe7\x97\x4f\xe4\xfa\x70\xae\x29\x5d\xdf\x7c\xde\xf0\x8b\x12\x95\x36\xf6\xad\xda\x1c\x12\x27\x0c\xb3\x7b\x8a\x33\xde\x06\xb8\x1f\x27\xa4\x50\x32\x12\xb1\x8c\x7c\x0b\x5f\x5d\x61\xf9\x47\xa1\xc7\xea\xd4\x22\x14\xa0\x07\x2f\xc5\x34\x9a\x8a\xba\x15\x3e\x17\xe1\xfc\x12\x47\x45\x40\xa5\x5f\xa7\x34\x9a\x5a\x3f\x0c\x09\x2d\x9a\xda\x98\x46\xdc\x21\xbe\xc0\x9d\xeb\x4d\xb4\x2e\x07\x55\x1f\xe7\x49\x9a\xf2\xbe\xc1\x95\xe5\xb5\x36\x50\x95\xf5\x8f\xd2\x35\x28\x4a\xab\x1f\xd0\x8c\x65\x62\x65\x97\x6b\x2e\xf6\x04\xc2\x45\x86\x50\x2c\xbb\x5e\xa5\x13\x65\xc9\x26\x9d\x53\x2c\xdb\x01\x7a\xf4\x62\x76\x93\xa6\xd8\x4f\x92\x10\xe5\x5b\x24\x54\xb8\x7c\x12\x79\xe0\x48\x21\xb6\x9c\xe2\xe2\xb2\x85\xf0\x56\x1e\x26\x84\xa3\x43\xce\x77\xf1\xd2\x0b\x33\x6a\xa3\xdc\x56\x54\x04\x71\xa7\x92\x2d\xf9\x93\x3e\x11\x97\x5b\xd9\x50\x92\x2b\xca\x00\x9c\x4d\x5d\x62\x15\xb6\x34\x6d\x73\xdd\xc4\x1c\x2d\x93\x14\xff\x61\x63\xc6\x78\x8a\x52\x2f\x5e\x51\x2c\x32\xc6\x4b\xf9\xf3\x26\x1e\x31\xe6\x70\xe5\x36\xe6\xa9\x6f\x65\xb7\x42\x09\x97\x73\x1a\xa5\x60\x8e\xf0\xc2\xfa\x01\x8f\x2a\x94\x58\xfc\x7f\xc6\x9c\x22\xa9\xdc\xd2\x4d\x9a\x26\xe9\x72\x44\xaa\x12\x34\x74\x59\xdc\x4e\x92\xe2\x2b\xfc\xdd\x83\x8d\x8b\xa9\xdf\x3d\x10\x58\x75\x76\x4d\x1f\x20\x65\x07\x5c\x7e\xe5\x99\x34\x04\x13\x6e\x92\x0f\x89\x6d\xcf\x01\xd5\x9d\x60\x29\x91\x12\x2b\x5d\x09\xc9\x56\x23\xab\x52\xf6\x25\x81\x1e\x28\x13\xd7\xe8\x36\xed\x8c\xa4\xc4\x6e\x78\xd5\xb0\xa5\x37\x5b\x4d\x29\xad\xc4\x41\xa8\xd5\x79\x30\x5a\x56\x09\xb3\x15\xbc\x88\x40\xa0\x41\xf6\x07\x88\x9c\xdc\x03\x18\x29\x65\x9b\x34\xee\x6c\x4b\xe0\x9e\x94\xb7\xf6\x59\xad\xec\x09\x63\xca\xe4\x3d\x10\xfc\x34\xf7\xe2\x43\x10\x78\xd6\x80\x60\x89\xb6\x2c\x9d\x83\x40\x10\x33\x9a\x2e\xbd\x39\xdd\xe6\x5d\x08\x3c\xad\x63\xa1\x05\x3a\x15\x93\xb9\xcd\x35\x03\x36\x30\x21\xbb\xf1\xc6\xb7\x01\xd1\xac\x7a\x98\xa9\xf4\x94\x76\xfe\x32\x10\x36\x5a\x96\xa8\x05\x73\xb2\x74\x3e\xa8\x4d\xc1\xfc\x7e\xdd\x29\x58\x96\xe8\x0f\x16\x7c\xa7\x86\xe8\xf0\xe9\x29\x16\x7e\xd4\x77\xd3\xc2\x62\x76\x9f\x6c\xc2\x05\x16\x08\xc6\xf1\x26\x0c\x49\x5b\x95\xa2\x41\x44\x27\xe8\x5e\x5d\x93\x6c\x08\xb2\x48\xfb\xa0\xfa\xc1\xcc\xd6\xda\x44\x2c\x1f\xdb\xb3\xb7\x1e\x00\xd6\xb2\x93\xf5\xdb\x8a\x85\x45\x91\xdc\x1d\x66\xb5\xb8\x6d\x99\xe4\x5a\xf6\xd9\x53\x7a\xf3\xa9\xa6\x39\xef\x88\xa8\x2b\x18\xf3\x4d\xba\x0e\x81\x81\xad\xfa\xc3\xc0\x9d\xdc\x44\xc3\x56\x6d\x0f\x6a\xdb\xfc\x16\xc4\x2c\xcd\x7c\x0b\xdd\xda\x00\xc9\x84\xc2\xbf\x52\xcc\x9e\x14\x93\xa7\xdf\x3c\xc1\x04\x98\x18\xa1\x97\x00\x8f\x83\xc8\x25\xdc\x47\xab\x6d\x44\xdc\x48\x6b\x7a\x8a\xc2\x2a\xf9\xe5\xbe\x94\x52\x31\xf6\x02\x09\x25\xc0\xe1\x2b\xd3\x49\xc5\xe6\xf0\xae\x64\x84\x4a\x96\x70\x1b\x4c\x24\x05\x02\x14\x84\x35\xb7\xb0\x92\xd9\x89\x91\xbe\x1c\xb2\xdb\x82\x86\x3c\xca\xa1\x63\xa6\x8f\x50\xff\xe3\x26\x8f\xf0\x8d\xe3\x00\xea\x08\xc0\x34\x49\x1c\x95\x76\xd8\x97\x36\x6a\x3a\xa1\x8e\x50\x3d\x67\x23\xd5\x13\xc4\x7d\xdd\xef\x30\x46\x68\xc0\xfd\xe3\xa2\x84\x00\xfc\x6f\x42\x08\x35\x96\x07\x35\xde\x59\x10\x51\xb3\x74\x90\x6b\x34\xf3\x9d\x23\x3c\x87\x98\x4c\xce\xa7\x6f\x6a\xcf\x21\x5e\xf9\xe1\x51\xf0\x43\xc0\x4d\x07\x3f\xac\x3d\xb5\xba\x4d\x1e\x47\xd6\x20\x04\x1d\xc4\x18\xe1\xb1\x87\xda\x68\xc4\x73\x0f\xee\xd5\x2e\xc2\x18\x44\x7d\xf9\xa2\x62\xea\x05\xf2\x45\xee\xff\xd7\xe6\x8b\x8a\xcd\xe1\x6d\x4b\xcf\x17\x0f\x41\xdf\x99\x02\xbf\xc1\x0c\x52\x60\xa2\x8e\xb8\x6e\x02\xc9\xaf\xf6\xe5\x8f\x9d\xfa\x35\xf4\xb1\x4a\xc4\x71\x73\x48\xc0\xc4\x71\x73\x48\x78\x98\x3c\x80\x43\x02\x58\x4d\x72\x48\xa5\x41\xf6\xe5\x90\x4d\xf0\xa8\x47\x0b\x26\x36\x9e\xbe\xe9\x38\x5c\xd0\x86\x71\xfb\xab\xbc\x21\x7b\xb6\x9e\x8a\xee\x6b\xac\x87\x51\x51\xcd\x0e\xa1\x8d\x67\x3c\x86\x83\x10\xea\x59\x88\x17\xc1\x4d\x61\x41\x7d\x13\x6e\xaa\xb1\x3c\xa8\xc9\xc3\x99\x0a\xb3\xe4\x14\x54\x1a\x61\xa7\x93\xe9\xe5\x2b\x15\xed\x49\x45\x21\xfb\xe6\xb9\xa8\xc0\x89\x91\x2f\x2b\x05\x3e\x0e\xe2\x9e\xe2\x70\x90\xda\x5a\xaa\xd3\x41\x3b\xc8\x67\xc0\x85\x46\x93\xe9\xa5\xd5\x97\x83\xaa\x26\x5f\x20\x09\x15\xc0\xf8\xca\x2c\x54\x35\x7a\x40\x87\x32\xf2\xbd\x65\x85\xbc\xc1\xb4\x53\xc2\xa0\x0e\xb6\x4e\xde\x59\x81\xad\x3f\xfd\xec\x82\xdb\x73\x95\x1f\x0d\xe7\x14\x08\x38\x6e\xd2\x29\x4e\x53\x0e\x60\x9d\x02\x9b\x26\x69\xa7\xda\x1c\xfb\xf2\xce\x67\xa0\xb3\x45\xbf\xf6\x6f\xb2\x7a\xee\xb8\xb7\x21\x1e\x46\x1e\x75\x2d\x5e\xa7\x7d\xfc\x22\x88\xa2\x58\x05\xdf\x84\x29\xea\x4c\x3f\xb3\x11\x2b\x58\x97\xc7\x65\xcd\x72\x45\xa9\xd4\x14\x5b\x74\x5e\x19\x63\x7f\xc6\x28\x6b\x60\x9e\x33\x16\x88\x31\xc2\x1a\x0b\xa4\x1c\xc4\x1b\x8b\x73\xe0\xe5\x81\x1c\x59\x9a\xe6\x51\xf0\x1d\x0c\x72\x29\x44\x47\x52\xb2\x37\x8f\x6c\xba\xf0\x02\x99\x64\x01\x98\xaf\xcc\x25\x9b\x66\x07\xb1\xc9\x02\x93\x46\xf8\x64\x1d\x93\x83\x19\x65\x09\x88\x36\x08\x1b\x28\x55\x9e\x58\x57\x30\x1c\xc0\x2e\xbb\x41\xa8\x33\xe0\x1c\x3f\xcb\x2c\xb0\x71\xdc\x3c\xb3\x78\xdf\x66\x00\xd3\x2c\x70\x6b\x92\x6b\x36\x5b\x6a\x5f\xb6\xd9\x0b\xb9\x3a\xde\xf9\x8c\xed\x5a\xcf\x3d\x9f\xd1\x44\x0f\x63\x9f\x4d\x03\x2f\x9d\x7f\x16\xeb\xe3\x9b\x30\x50\xbd\xf1\xde\xed\x7b\x96\x14\x8f\x5a\x5b\xb9\xf2\x21\x49\xe9\x86\x22\x1f\x3e\xd6\x44\x4f\x7d\xc8\xd5\x89\xef\xcb\x65\x59\xf7\xae\x7c\x93\x0f\xea\x0f\x3e\x08\x67\x0a\xe9\xe2\x9d\x24\xdf\x6f\x9f\x6e\x29\x27\x8b\x97\xbe\xea\x73\xb9\x6c\xf9\x8e\x94\x3f\xc5\x67\xb0\x96\x7c\x7f\xda\x70\xce\x9f\x82\x73\xbe\x3f\xdd\xe5\x5c\x9c\x30\x8d\x83\x53\xc5\x43\xfe\x77\xb7\x87\x02\x96\xea\xec\xc2\xc7\xbc\x99\x61\xb8\x61\xd0\xa7\xb8\xfa\xd2\x41\x49\xb4\x98\x61\x24\xd3\xbe\x2f\xef\xc6\x4f\xae\x78\x37\xd1\xeb\xe0\x2d\x46\xd1\x00\x53\x94\x84\x83\xa7\x6a\xc6\x85\x97\x66\x53\x5e\xfa\x3a\xd6\xeb\x19\x37\xe6\x97\x8e\xb6\x81\x2d\x57\x89\x3e\xf1\xcd\xdd\x58\x49\x7f\x31\xd3\x54\x01\x8a\x6d\x4a\x94\xc0\xd9\x55\x06\xa7\x55\x0a\x39\x59\x29\x86\xf4\x5e\x2d\x47\xe1\xb5\xd9\x82\xd4\x7c\x7f\x66\x49\x6a\x0e\xb7\x96\x82\x38\x12\xae\x2f\x09\xf9\xfc\x48\x89\x52\x07\x29\x6d\xaa\x0c\xf2\x5d\x8c\x13\x69\x4a\xaf\xe6\xf3\x63\xa3\xf5\x88\x59\x4a\xfa\xe5\xde\xaf\x64\x5f\xfa\x6a\x36\xf9\x35\x8f\x3b\xdc\xfd\x07\xdc\x2e\x4b\x36\xf2\xcf\x86\xba\xc2\x75\xbe\xbd\xe6\xb5\xdf\x8d\xa2\xcc\x82\xa8\x7d\x37\x29\x1f\xc3\x37\x8e\x25\xf0\xd1\x7a\x85\xc4\xd4\x20\x12\x57\x1a\x45\x02\x15\x7d\x0a\x55\x79\x28\x0a\x06\xcf\xae\x4f\xc0\x81\x6e\x75\x7c\xd3\x2b\x75\xb1\x20\xb2\x8b\x99\x85\xbe\x32\x14\x19\x09\x3c\x45\xcd\x8b\x50\x3a\x23\xd9\x1f\x88\x64\x39\xe6\x42\x51\xb1\xa7\x8b\x45\xfc\xde\x6e\x69\xbc\xc8\x73\xf4\xff\x00\x00\x00\xff\xff\xde\xd2\xaf\x8a\xb5\x40\x00\x00")

func tmplX_helpers_testHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplX_helpers_testHtml,
		"tmpl/x_helpers_test.html",
	)
}

func tmplX_helpers_testHtml() (*asset, error) {
	bytes, err := tmplX_helpers_testHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/x_helpers_test.html", size: 16565, mode: os.FileMode(420), modTime: time.Unix(1512460598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/model.html": tmplModelHtml,
	"tmpl/x_helpers.html": tmplX_helpersHtml,
	"tmpl/x_helpers_test.html": tmplX_helpers_testHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tmpl": &bintree{nil, map[string]*bintree{
		"model.html": &bintree{tmplModelHtml, map[string]*bintree{}},
		"x_helpers.html": &bintree{tmplX_helpersHtml, map[string]*bintree{}},
		"x_helpers_test.html": &bintree{tmplX_helpers_testHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

